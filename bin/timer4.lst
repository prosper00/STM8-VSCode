                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module timer4
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TIM4_init
                                     12 	.globl _delay
                                     13 	.globl _delayMicroseconds
                                     14 	.globl _TIM4_UPD_ISR
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DABS (ABS)
                                     27 
                                     28 ; default segment ordering for linker
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area CONST
                                     33 	.area INITIALIZER
                                     34 	.area CODE
                                     35 
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area HOME
                                     40 	.area GSINIT
                                     41 	.area GSFINAL
                                     42 	.area GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area HOME
                                     47 	.area HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area CODE
                           000000    52 	Stimer4$micros$0 ==.
                                     53 ;	timer4.h: 91: INLINE uint32_t micros(void) {
                                     54 ; genLabel
                                     55 ;	-----------------------------------------
                                     56 ;	 function micros
                                     57 ;	-----------------------------------------
                                     58 ;	Register assignment might be sub-optimal.
                                     59 ;	Stack space usage: 10 bytes.
      000000                         60 _micros:
                           000000    61 	Stimer4$micros$1 ==.
      000000 52 0A            [ 2]   62 	sub	sp, #10
                           000002    63 	Stimer4$micros$2 ==.
                           000002    64 	Stimer4$micros$3 ==.
                                     65 ;	timer4.h: 97: sfr_TIM4.CR1.CEN = 0;
                                     66 ; genAssign
                                     67 ; genPointerSet
                                     68 ; peephole 0w removed dead load into x from #0x5340.
      000002 72 11 53 40      [ 1]   69 	bres	0x5340, #0
                                     70 ; peephole 205x replaced 'and' by 'bres' (index register) ('0x5340' -> '0x5340').
                           000006    71 	Stimer4$micros$4 ==.
                                     72 ;	timer4.h: 100: cnt = sfr_TIM4.CNTR.byte;
                                     73 ; genPointerGet
      000006 C6 53 46         [ 1]   74 	ld	a, 0x5346
      000009 6B 01            [ 1]   75 	ld	(0x01, sp), a
                           00000B    76 	Stimer4$micros$5 ==.
                                     77 ;	timer4.h: 102: uif = sfr_TIM4.SR.byte;
                                     78 ; genPointerGet
      00000B C6 53 44         [ 1]   79 	ld	a, 0x5344
                                     80 ; genCast
                                     81 ; genAssign
      00000E 6B 02            [ 1]   82 	ld	(0x02, sp), a
                           000010    83 	Stimer4$micros$6 ==.
                                     84 ;	timer4.h: 108: sfr_TIM4.CR1.CEN = 1;
                                     85 ; genAssign
                                     86 ; genPointerSet
                                     87 ; peephole 0w removed dead load into x from #0x5340.
      000010 72 10 53 40      [ 1]   88 	bset	0x5340, #0
                                     89 ; peephole 203x replaced 'or' by 'bset' (index register) ('0x5340' -> '0x5340').
                           000014    90 	Stimer4$micros$7 ==.
                                     91 ;	timer4.h: 111: us  = g_micros;
                                     92 ; genAssign
      000014 90 CEu00u02      [ 2]   93 	ldw	y, _g_micros+2
      000018 CEu00u00         [ 2]   94 	ldw	x, _g_micros+0
      00001B 1F 03            [ 2]   95 	ldw	(0x03, sp), x
                           00001D    96 	Stimer4$micros$8 ==.
                                     97 ;	timer4.h: 115: us += ((uint16_t) cnt) << 2;
                                     98 ; genCast
                                     99 ; genAssign
      00001D 5F               [ 1]  100 	clrw	x
      00001E 7B 01            [ 1]  101 	ld	a, (0x01, sp)
      000020 97               [ 1]  102 	ld	xl, a
                                    103 ; genLeftShiftLiteral
      000021 58               [ 2]  104 	sllw	x
      000022 58               [ 2]  105 	sllw	x
                                    106 ; genCast
                                    107 ; genAssign
      000023 1F 09            [ 2]  108 	ldw	(0x09, sp), x
      000025 5F               [ 1]  109 	clrw	x
                                    110 ; genPlus
      000026 72 F9 09         [ 2]  111 	addw	y, (0x09, sp)
      000029 9F               [ 1]  112 	ld	a, xl
      00002A 19 04            [ 1]  113 	adc	a, (0x04, sp)
      00002C 02               [ 1]  114 	rlwa	x
                                    115 ; peephole r1 used rlwa.
      00002D 19 03            [ 1]  116 	adc	a, (0x03, sp)
      00002F 95               [ 1]  117 	ld	xh, a
                           000030   118 	Stimer4$micros$9 ==.
                                    119 ;	timer4.h: 119: if ((uif & 0x01) && (cnt != 250))
                                    120 ; genAnd
      000030 7B 02            [ 1]  121 	ld	a, (0x02, sp)
      000032 44               [ 1]  122 	srl	a
                                    123 ; peephole j5 changed absolute to relative unconditional jump.
      000033 24 11            [ 1]  124 	jrnc	00102$
                                    125 ; peephole j6 removed jra by using inverse jump logic
                                    126 ; peephole j30 removed unused label 00120$.
                                    127 ; skipping generated iCode
                                    128 ; genCmpEQorNE
      000035 7B 01            [ 1]  129 	ld	a, (0x01, sp)
      000037 A1 FA            [ 1]  130 	cp	a, #0xfa
                                    131 ; peephole j5 changed absolute to relative unconditional jump.
      000039 27 0B            [ 1]  132 	jreq	00102$
                                    133 ; peephole j10 removed jra by using inverse jump logic
                                    134 ; peephole j30 removed unused label 00122$.
                           00003B   135 	Stimer4$micros$10 ==.
                                    136 ; skipping generated iCode
                           00003B   137 	Stimer4$micros$11 ==.
                                    138 ;	timer4.h: 120: us += 1000L;
                                    139 ; genPlus
      00003B 72 A9 03 E8      [ 2]  140 	addw	y, #0x03e8
      00003F 9F               [ 1]  141 	ld	a, xl
      000040 A9 00            [ 1]  142 	adc	a, #0x00
      000042 02               [ 1]  143 	rlwa	x
                                    144 ; peephole r1 used rlwa.
      000043 A9 00            [ 1]  145 	adc	a, #0x00
      000045 95               [ 1]  146 	ld	xh, a
                                    147 ; genLabel
      000046                        148 00102$:
                           000046   149 	Stimer4$micros$12 ==.
                                    150 ;	timer4.h: 122: return(us);
                                    151 ; genReturn
      000046 51               [ 1]  152 	exgw	x, y
                                    153 ; genLabel
                                    154 ; peephole j30 removed unused label 00104$.
                           000047   155 	Stimer4$micros$13 ==.
                                    156 ;	timer4.h: 124: } // micros()
                                    157 ; genEndFunction
      000047 5B 0A            [ 2]  158 	addw	sp, #10
                           000049   159 	Stimer4$micros$14 ==.
                           000049   160 	Stimer4$micros$15 ==.
                           000049   161 	XFtimer4$micros$0$0 ==.
      000049 81               [ 4]  162 	ret
                           00004A   163 	Stimer4$micros$16 ==.
                           00004A   164 	Stimer4$TIM4_init$17 ==.
                                    165 ;	timer4.c: 31: void TIM4_init(void) {
                                    166 ; genLabel
                                    167 ;	-----------------------------------------
                                    168 ;	 function TIM4_init
                                    169 ;	-----------------------------------------
                                    170 ;	Register assignment is optimal.
                                    171 ;	Stack space usage: 0 bytes.
      00004A                        172 _TIM4_init:
                           00004A   173 	Stimer4$TIM4_init$18 ==.
                           00004A   174 	Stimer4$TIM4_init$19 ==.
                                    175 ;	timer4.c: 39: sfr_TIM4.CR1.CEN = 0;
                                    176 ; genAssign
                                    177 ; genPointerSet
                                    178 ; peephole 0w removed dead load into x from #0x5340.
      00004A 72 11 53 40      [ 1]  179 	bres	0x5340, #0
                                    180 ; peephole 205x replaced 'and' by 'bres' (index register) ('0x5340' -> '0x5340').
                           00004E   181 	Stimer4$TIM4_init$20 ==.
                                    182 ;	timer4.c: 42: g_flagMilli = 0;
                                    183 ; genAssign
      00004E 72 5Fu00u00      [ 1]  184 	clr	_g_flagMilli+0
                           000052   185 	Stimer4$TIM4_init$21 ==.
                                    186 ;	timer4.c: 43: g_millis    = 0;
                                    187 ; genAssign
      000052 5F               [ 1]  188 	clrw	x
      000053 CFu00u02         [ 2]  189 	ldw	_g_millis+2, x
      000056 CFu00u00         [ 2]  190 	ldw	_g_millis+0, x
                           000059   191 	Stimer4$TIM4_init$22 ==.
                                    192 ;	timer4.c: 44: g_micros    = 0;
                                    193 ; genAssign
      000059 5F               [ 1]  194 	clrw	x
      00005A CFu00u02         [ 2]  195 	ldw	_g_micros+2, x
      00005D CFu00u00         [ 2]  196 	ldw	_g_micros+0, x
                           000060   197 	Stimer4$TIM4_init$23 ==.
                                    198 ;	timer4.c: 47: sfr_TIM4.CNTR.byte = 0x00;
                                    199 ; genPointerSet
      000060 35 00 53 46      [ 1]  200 	mov	0x5346+0, #0x00
                           000064   201 	Stimer4$TIM4_init$24 ==.
                                    202 ;	timer4.c: 50: sfr_TIM4.CR1.ARPE = 1;
                                    203 ; genAssign
                                    204 ; genPointerSet
                                    205 ; peephole 0w removed dead load into x from #0x5340.
      000064 72 1E 53 40      [ 1]  206 	bset	0x5340, #7
                                    207 ; peephole 203x replaced 'or' by 'bset' (index register) ('0x5340' -> '0x5340').
                           000068   208 	Stimer4$TIM4_init$25 ==.
                                    209 ;	timer4.c: 53: sfr_TIM4.EGR.byte  = 0x00;
                                    210 ; genPointerSet
      000068 35 00 53 45      [ 1]  211 	mov	0x5345+0, #0x00
                           00006C   212 	Stimer4$TIM4_init$26 ==.
                                    213 ;	timer4.c: 56: sfr_TIM4.PSCR.PSC = 6;
                                    214 ; genAssign
                                    215 ; genPointerSet
      00006C C6 53 47         [ 1]  216 	ld	a, 0x5347
      00006F A4 F8            [ 1]  217 	and	a, #0xf8
      000071 AA 06            [ 1]  218 	or	a, #0x06
      000073 C7 53 47         [ 1]  219 	ld	0x5347, a
                                    220 ; peephole 340x exchanged 'ldw-ld-and-or-ld' by 'ld-and-or-ld direct' ('0x5347' -> '0x5347').
                           000076   221 	Stimer4$TIM4_init$27 ==.
                                    222 ;	timer4.c: 59: sfr_TIM4.ARR.byte  = 250;
                                    223 ; genPointerSet
      000076 35 FA 53 48      [ 1]  224 	mov	0x5348+0, #0xfa
                           00007A   225 	Stimer4$TIM4_init$28 ==.
                                    226 ;	timer4.c: 62: sfr_TIM4.IER.UIE = 1;
                                    227 ; genAssign
                                    228 ; genPointerSet
                                    229 ; peephole 0w removed dead load into x from #0x5343.
      00007A 72 10 53 43      [ 1]  230 	bset	0x5343, #0
                                    231 ; peephole 203x replaced 'or' by 'bset' (index register) ('0x5343' -> '0x5343').
                           00007E   232 	Stimer4$TIM4_init$29 ==.
                                    233 ;	timer4.c: 65: sfr_TIM4.CR1.CEN = 1;
                                    234 ; genAssign
                                    235 ; genPointerSet
                                    236 ; peephole 0w removed dead load into x from #0x5340.
      00007E 72 10 53 40      [ 1]  237 	bset	0x5340, #0
                                    238 ; peephole 203x replaced 'or' by 'bset' (index register) ('0x5340' -> '0x5340').
                                    239 ; genLabel
                                    240 ; peephole j30 removed unused label 00101$.
                           000082   241 	Stimer4$TIM4_init$30 ==.
                                    242 ;	timer4.c: 67: } // TIM4_init
                                    243 ; genEndFunction
                           000082   244 	Stimer4$TIM4_init$31 ==.
                           000082   245 	XG$TIM4_init$0$0 ==.
      000082 81               [ 4]  246 	ret
                           000083   247 	Stimer4$TIM4_init$32 ==.
                           000083   248 	Stimer4$delay$33 ==.
                                    249 ;	timer4.c: 85: void delay(uint32_t ms) {
                                    250 ; genLabel
                                    251 ;	-----------------------------------------
                                    252 ;	 function delay
                                    253 ;	-----------------------------------------
                                    254 ;	Register assignment might be sub-optimal.
                                    255 ;	Stack space usage: 17 bytes.
      000083                        256 _delay:
                           000083   257 	Stimer4$delay$34 ==.
      000083 52 11            [ 2]  258 	sub	sp, #17
                           000085   259 	Stimer4$delay$35 ==.
                           000085   260 	Stimer4$delay$36 ==.
                                    261 ;	timer4.c: 87: uint32_t start = micros();
                                    262 ; genAssign
                                    263 ; genPointerSet
                                    264 ; peephole 0w removed dead load into x from #0x5340.
      000085 72 11 53 40      [ 1]  265 	bres	0x5340, #0
                                    266 ; peephole 205x replaced 'and' by 'bres' (index register) ('0x5340' -> '0x5340').
                                    267 ; genPointerGet
      000089 C6 53 46         [ 1]  268 	ld	a, 0x5346
      00008C 6B 08            [ 1]  269 	ld	(0x08, sp), a
                                    270 ; genPointerGet
      00008E C6 53 44         [ 1]  271 	ld	a, 0x5344
                                    272 ; genCast
                                    273 ; genAssign
      000091 6B 09            [ 1]  274 	ld	(0x09, sp), a
                                    275 ; genAssign
                                    276 ; genPointerSet
                                    277 ; peephole 0w removed dead load into x from #0x5340.
      000093 72 10 53 40      [ 1]  278 	bset	0x5340, #0
                                    279 ; peephole 203x replaced 'or' by 'bset' (index register) ('0x5340' -> '0x5340').
                                    280 ; genAssign
      000097 90 CEu00u02      [ 2]  281 	ldw	y, _g_micros+2
      00009B CEu00u00         [ 2]  282 	ldw	x, _g_micros+0
      00009E 1F 0A            [ 2]  283 	ldw	(0x0a, sp), x
                                    284 ; genCast
                                    285 ; genAssign
      0000A0 5F               [ 1]  286 	clrw	x
      0000A1 7B 08            [ 1]  287 	ld	a, (0x08, sp)
      0000A3 97               [ 1]  288 	ld	xl, a
                                    289 ; genLeftShiftLiteral
      0000A4 58               [ 2]  290 	sllw	x
      0000A5 58               [ 2]  291 	sllw	x
                                    292 ; genCast
                                    293 ; genAssign
      0000A6 1F 10            [ 2]  294 	ldw	(0x10, sp), x
      0000A8 5F               [ 1]  295 	clrw	x
                                    296 ; genPlus
      0000A9 72 F9 10         [ 2]  297 	addw	y, (0x10, sp)
      0000AC 9F               [ 1]  298 	ld	a, xl
      0000AD 19 0B            [ 1]  299 	adc	a, (0x0b, sp)
      0000AF 02               [ 1]  300 	rlwa	x
                                    301 ; peephole r1 used rlwa.
      0000B0 19 0A            [ 1]  302 	adc	a, (0x0a, sp)
      0000B2 95               [ 1]  303 	ld	xh, a
                                    304 ; genAnd
      0000B3 7B 09            [ 1]  305 	ld	a, (0x09, sp)
      0000B5 44               [ 1]  306 	srl	a
                                    307 ; peephole j5 changed absolute to relative unconditional jump.
      0000B6 24 11            [ 1]  308 	jrnc	00106$
                                    309 ; peephole j6 removed jra by using inverse jump logic
                                    310 ; peephole j30 removed unused label 00156$.
                                    311 ; skipping generated iCode
                                    312 ; genCmpEQorNE
      0000B8 7B 08            [ 1]  313 	ld	a, (0x08, sp)
      0000BA A1 FA            [ 1]  314 	cp	a, #0xfa
                                    315 ; peephole j5 changed absolute to relative unconditional jump.
      0000BC 27 0B            [ 1]  316 	jreq	00106$
                                    317 ; peephole j10 removed jra by using inverse jump logic
                                    318 ; peephole j30 removed unused label 00158$.
                           0000BE   319 	Stimer4$delay$37 ==.
                                    320 ; skipping generated iCode
                                    321 ; genPlus
      0000BE 72 A9 03 E8      [ 2]  322 	addw	y, #0x03e8
      0000C2 9F               [ 1]  323 	ld	a, xl
      0000C3 A9 00            [ 1]  324 	adc	a, #0x00
      0000C5 02               [ 1]  325 	rlwa	x
                                    326 ; peephole r1 used rlwa.
      0000C6 A9 00            [ 1]  327 	adc	a, #0x00
      0000C8 95               [ 1]  328 	ld	xh, a
                                    329 ; genLabel
      0000C9                        330 00106$:
                           0000C9   331 	Stimer4$delay$38 ==.
                           0000C9   332 	Stimer4$delay$38 ==.
                                    333 ; genAssign
      0000C9 17 03            [ 2]  334 	ldw	(0x03, sp), y
      0000CB 1F 01            [ 2]  335 	ldw	(0x01, sp), x
                           0000CD   336 	Stimer4$delay$39 ==.
                           0000CD   337 	Stimer4$delay$40 ==.
                                    338 ;	timer4.c: 90: ms *= 1000L;
                                    339 ; genIPush
      0000CD 1E 16            [ 2]  340 	ldw	x, (0x16, sp)
      0000CF 89               [ 2]  341 	pushw	x
                           0000D0   342 	Stimer4$delay$41 ==.
      0000D0 1E 16            [ 2]  343 	ldw	x, (0x16, sp)
      0000D2 89               [ 2]  344 	pushw	x
                           0000D3   345 	Stimer4$delay$42 ==.
                                    346 ; genIPush
      0000D3 4B E8            [ 1]  347 	push	#0xe8
                           0000D5   348 	Stimer4$delay$43 ==.
      0000D5 4B 03            [ 1]  349 	push	#0x03
                           0000D7   350 	Stimer4$delay$44 ==.
      0000D7 5F               [ 1]  351 	clrw	x
      0000D8 89               [ 2]  352 	pushw	x
                           0000D9   353 	Stimer4$delay$45 ==.
                                    354 ; genCall
      0000D9 CDr00r00         [ 4]  355 	call	__mullong
      0000DC 5B 08            [ 2]  356 	addw	sp, #8
                           0000DE   357 	Stimer4$delay$46 ==.
                                    358 ; genAssign
      0000DE 1F 16            [ 2]  359 	ldw	(0x16, sp), x
      0000E0 17 14            [ 2]  360 	ldw	(0x14, sp), y
                           0000E2   361 	Stimer4$delay$47 ==.
                                    362 ;	timer4.c: 91: while (micros() - start < ms)
                                    363 ; genLabel
      0000E2                        364 00101$:
                           0000E2   365 	Stimer4$delay$48 ==.
                                    366 ;	timer4.h: 97: sfr_TIM4.CR1.CEN = 0;
                                    367 ; genAssign
                                    368 ; genPointerSet
                                    369 ; peephole 0w removed dead load into x from #0x5340.
      0000E2 72 11 53 40      [ 1]  370 	bres	0x5340, #0
                                    371 ; peephole 205x replaced 'and' by 'bres' (index register) ('0x5340' -> '0x5340').
                                    372 ;	timer4.h: 100: cnt = sfr_TIM4.CNTR.byte;
                                    373 ; genPointerGet
      0000E6 C6 53 46         [ 1]  374 	ld	a, 0x5346
      0000E9 6B 05            [ 1]  375 	ld	(0x05, sp), a
                                    376 ;	timer4.h: 102: uif = sfr_TIM4.SR.byte;
                                    377 ; genPointerGet
      0000EB C6 53 44         [ 1]  378 	ld	a, 0x5344
                                    379 ; genCast
                                    380 ; genAssign
      0000EE 90 97            [ 1]  381 	ld	yl, a
                                    382 ;	timer4.h: 108: sfr_TIM4.CR1.CEN = 1;
                                    383 ; genAssign
                                    384 ; genPointerSet
                                    385 ; peephole 0w removed dead load into x from #0x5340.
      0000F0 72 10 53 40      [ 1]  386 	bset	0x5340, #0
                                    387 ; peephole 203x replaced 'or' by 'bset' (index register) ('0x5340' -> '0x5340').
                                    388 ;	timer4.h: 111: us  = g_micros;
                                    389 ; genAssign
      0000F4 CEu00u02         [ 2]  390 	ldw	x, _g_micros+2
      0000F7 1F 08            [ 2]  391 	ldw	(0x08, sp), x
      0000F9 CEu00u00         [ 2]  392 	ldw	x, _g_micros+0
      0000FC 1F 06            [ 2]  393 	ldw	(0x06, sp), x
                                    394 ;	timer4.h: 115: us += ((uint16_t) cnt) << 2;
                                    395 ; genCast
                                    396 ; genAssign
      0000FE 5F               [ 1]  397 	clrw	x
      0000FF 7B 05            [ 1]  398 	ld	a, (0x05, sp)
      000101 97               [ 1]  399 	ld	xl, a
                                    400 ; genLeftShiftLiteral
      000102 58               [ 2]  401 	sllw	x
      000103 58               [ 2]  402 	sllw	x
                                    403 ; genCast
                                    404 ; genAssign
      000104 4F               [ 1]  405 	clr	a
      000105 0F 0A            [ 1]  406 	clr	(0x0a, sp)
                                    407 ; genPlus
      000107 72 FB 08         [ 2]  408 	addw	x, (0x08, sp)
      00010A 1F 10            [ 2]  409 	ldw	(0x10, sp), x
      00010C 19 07            [ 1]  410 	adc	a, (0x07, sp)
      00010E 6B 0F            [ 1]  411 	ld	(0x0f, sp), a
      000110 4F               [ 1]  412 	clr	a
      000111 19 06            [ 1]  413 	adc	a, (0x06, sp)
      000113 6B 0E            [ 1]  414 	ld	(0x0e, sp), a
                                    415 ;	timer4.h: 119: if ((uif & 0x01) && (cnt != 250))
                                    416 ; genAnd
      000115 90 54            [ 2]  417 	srlw	y
                                    418 ; peephole j5 changed absolute to relative unconditional jump.
      000117 24 19            [ 1]  419 	jrnc	00110$
                                    420 ; peephole j6 removed jra by using inverse jump logic
                                    421 ; peephole j30 removed unused label 00160$.
                                    422 ; skipping generated iCode
                                    423 ; genCmpEQorNE
      000119 7B 05            [ 1]  424 	ld	a, (0x05, sp)
      00011B A1 FA            [ 1]  425 	cp	a, #0xfa
                                    426 ; peephole j5 changed absolute to relative unconditional jump.
      00011D 27 13            [ 1]  427 	jreq	00110$
                                    428 ; peephole j10 removed jra by using inverse jump logic
                                    429 ; peephole j30 removed unused label 00162$.
                           00011F   430 	Stimer4$delay$49 ==.
                                    431 ; skipping generated iCode
                                    432 ;	timer4.h: 120: us += 1000L;
                                    433 ; genPlus
      00011F 1E 10            [ 2]  434 	ldw	x, (0x10, sp)
      000121 1C 03 E8         [ 2]  435 	addw	x, #0x03e8
      000124 1F 10            [ 2]  436 	ldw	(0x10, sp), x
      000126 7B 0F            [ 1]  437 	ld	a, (0x0f, sp)
      000128 A9 00            [ 1]  438 	adc	a, #0x00
      00012A 6B 0F            [ 1]  439 	ld	(0x0f, sp), a
      00012C 7B 0E            [ 1]  440 	ld	a, (0x0e, sp)
      00012E A9 00            [ 1]  441 	adc	a, #0x00
      000130 6B 0E            [ 1]  442 	ld	(0x0e, sp), a
                                    443 ; genLabel
      000132                        444 00110$:
                           000132   445 	Stimer4$delay$50 ==.
                           000132   446 	Stimer4$delay$50 ==.
                           000132   447 	Stimer4$delay$51 ==.
                                    448 ;	timer4.c: 91: while (micros() - start < ms)
                                    449 ; genMinus
      000132 1E 10            [ 2]  450 	ldw	x, (0x10, sp)
      000134 72 F0 03         [ 2]  451 	subw	x, (0x03, sp)
      000137 7B 0F            [ 1]  452 	ld	a, (0x0f, sp)
      000139 12 02            [ 1]  453 	sbc	a, (0x02, sp)
      00013B 88               [ 1]  454 	push	a
                           00013C   455 	Stimer4$delay$52 ==.
      00013C 7B 0F            [ 1]  456 	ld	a, (0x0f, sp)
      00013E 12 02            [ 1]  457 	sbc	a, (0x02, sp)
      000140 6B 0B            [ 1]  458 	ld	(0x0b, sp), a
                           000142   459 	Stimer4$delay$53 ==.
                                    460 ; genCmp
                                    461 ; genCmpTnz
                                    462 ; peephole 6 removed dead pop / push pair.
                           000142   463 	Stimer4$delay$54 ==.
      000142 13 17            [ 2]  464 	cpw	x, (0x17, sp)
      000144 84               [ 1]  465 	pop	a
                           000145   466 	Stimer4$delay$55 ==.
      000145 12 15            [ 1]  467 	sbc	a, (0x15, sp)
      000147 7B 0A            [ 1]  468 	ld	a, (0x0a, sp)
      000149 12 14            [ 1]  469 	sbc	a, (0x14, sp)
                                    470 ; peephole j5 changed absolute to relative unconditional jump.
      00014B 24 03            [ 1]  471 	jrnc	00112$
                                    472 ; peephole j6 removed jra by using inverse jump logic
                                    473 ; peephole j30 removed unused label 00164$.
                                    474 ; skipping generated iCode
                           00014D   475 	Stimer4$delay$56 ==.
                           00014D   476 	Stimer4$delay$57 ==.
                                    477 ;	timer4.c: 92: NOP();
                                    478 ;	genInline
      00014D 9D               [ 1]  479 	nop
                                    480 ; genGoto
      00014E 20 92            [ 2]  481 	jra	00101$
                                    482 ; peephole j5 changed absolute to relative unconditional jump.
                                    483 ; genLabel
      000150                        484 00112$:
                           000150   485 	Stimer4$delay$58 ==.
                                    486 ;	timer4.c: 94: } // delay()
                                    487 ; genEndFunction
      000150 1E 12            [ 2]  488 	ldw	x, (18, sp)
      000152 5B 17            [ 2]  489 	addw	sp, #23
                           000154   490 	Stimer4$delay$59 ==.
      000154 FC               [ 2]  491 	jp	(x)
                           000155   492 	Stimer4$delay$60 ==.
                           000155   493 	Stimer4$delayMicroseconds$61 ==.
                                    494 ;	timer4.c: 112: void delayMicroseconds(uint32_t us) {
                                    495 ; genLabel
                                    496 ;	-----------------------------------------
                                    497 ;	 function delayMicroseconds
                                    498 ;	-----------------------------------------
                                    499 ;	Register assignment might be sub-optimal.
                                    500 ;	Stack space usage: 17 bytes.
      000155                        501 _delayMicroseconds:
                           000155   502 	Stimer4$delayMicroseconds$62 ==.
      000155 52 11            [ 2]  503 	sub	sp, #17
                           000157   504 	Stimer4$delayMicroseconds$63 ==.
                           000157   505 	Stimer4$delayMicroseconds$64 ==.
                                    506 ;	timer4.c: 114: uint32_t start = micros();
                                    507 ; genAssign
                                    508 ; genPointerSet
                                    509 ; peephole 0w removed dead load into x from #0x5340.
      000157 72 11 53 40      [ 1]  510 	bres	0x5340, #0
                                    511 ; peephole 205x replaced 'and' by 'bres' (index register) ('0x5340' -> '0x5340').
                                    512 ; genPointerGet
      00015B C6 53 46         [ 1]  513 	ld	a, 0x5346
      00015E 6B 08            [ 1]  514 	ld	(0x08, sp), a
                                    515 ; genPointerGet
      000160 C6 53 44         [ 1]  516 	ld	a, 0x5344
                                    517 ; genCast
                                    518 ; genAssign
      000163 6B 09            [ 1]  519 	ld	(0x09, sp), a
                                    520 ; genAssign
                                    521 ; genPointerSet
                                    522 ; peephole 0w removed dead load into x from #0x5340.
      000165 72 10 53 40      [ 1]  523 	bset	0x5340, #0
                                    524 ; peephole 203x replaced 'or' by 'bset' (index register) ('0x5340' -> '0x5340').
                                    525 ; genAssign
      000169 90 CEu00u02      [ 2]  526 	ldw	y, _g_micros+2
      00016D CEu00u00         [ 2]  527 	ldw	x, _g_micros+0
      000170 1F 0A            [ 2]  528 	ldw	(0x0a, sp), x
                                    529 ; genCast
                                    530 ; genAssign
      000172 5F               [ 1]  531 	clrw	x
      000173 7B 08            [ 1]  532 	ld	a, (0x08, sp)
      000175 97               [ 1]  533 	ld	xl, a
                                    534 ; genLeftShiftLiteral
      000176 58               [ 2]  535 	sllw	x
      000177 58               [ 2]  536 	sllw	x
                                    537 ; genCast
                                    538 ; genAssign
      000178 1F 10            [ 2]  539 	ldw	(0x10, sp), x
      00017A 5F               [ 1]  540 	clrw	x
                                    541 ; genPlus
      00017B 72 F9 10         [ 2]  542 	addw	y, (0x10, sp)
      00017E 9F               [ 1]  543 	ld	a, xl
      00017F 19 0B            [ 1]  544 	adc	a, (0x0b, sp)
      000181 02               [ 1]  545 	rlwa	x
                                    546 ; peephole r1 used rlwa.
      000182 19 0A            [ 1]  547 	adc	a, (0x0a, sp)
      000184 95               [ 1]  548 	ld	xh, a
                                    549 ; genAnd
      000185 7B 09            [ 1]  550 	ld	a, (0x09, sp)
      000187 44               [ 1]  551 	srl	a
                                    552 ; peephole j5 changed absolute to relative unconditional jump.
      000188 24 11            [ 1]  553 	jrnc	00106$
                                    554 ; peephole j6 removed jra by using inverse jump logic
                                    555 ; peephole j30 removed unused label 00156$.
                                    556 ; skipping generated iCode
                                    557 ; genCmpEQorNE
      00018A 7B 08            [ 1]  558 	ld	a, (0x08, sp)
      00018C A1 FA            [ 1]  559 	cp	a, #0xfa
                                    560 ; peephole j5 changed absolute to relative unconditional jump.
      00018E 27 0B            [ 1]  561 	jreq	00106$
                                    562 ; peephole j10 removed jra by using inverse jump logic
                                    563 ; peephole j30 removed unused label 00158$.
                           000190   564 	Stimer4$delayMicroseconds$65 ==.
                                    565 ; skipping generated iCode
                                    566 ; genPlus
      000190 72 A9 03 E8      [ 2]  567 	addw	y, #0x03e8
      000194 9F               [ 1]  568 	ld	a, xl
      000195 A9 00            [ 1]  569 	adc	a, #0x00
      000197 02               [ 1]  570 	rlwa	x
                                    571 ; peephole r1 used rlwa.
      000198 A9 00            [ 1]  572 	adc	a, #0x00
      00019A 95               [ 1]  573 	ld	xh, a
                                    574 ; genLabel
      00019B                        575 00106$:
                           00019B   576 	Stimer4$delayMicroseconds$66 ==.
                           00019B   577 	Stimer4$delayMicroseconds$66 ==.
                                    578 ; genAssign
      00019B 17 03            [ 2]  579 	ldw	(0x03, sp), y
      00019D 1F 01            [ 2]  580 	ldw	(0x01, sp), x
                           00019F   581 	Stimer4$delayMicroseconds$67 ==.
                           00019F   582 	Stimer4$delayMicroseconds$68 ==.
                                    583 ;	timer4.c: 117: while (micros() - start < us)
                                    584 ; genLabel
      00019F                        585 00101$:
                           00019F   586 	Stimer4$delayMicroseconds$69 ==.
                                    587 ;	timer4.h: 97: sfr_TIM4.CR1.CEN = 0;
                                    588 ; genAssign
                                    589 ; genPointerSet
                                    590 ; peephole 0w removed dead load into x from #0x5340.
      00019F 72 11 53 40      [ 1]  591 	bres	0x5340, #0
                                    592 ; peephole 205x replaced 'and' by 'bres' (index register) ('0x5340' -> '0x5340').
                                    593 ;	timer4.h: 100: cnt = sfr_TIM4.CNTR.byte;
                                    594 ; genPointerGet
      0001A3 C6 53 46         [ 1]  595 	ld	a, 0x5346
      0001A6 6B 05            [ 1]  596 	ld	(0x05, sp), a
                                    597 ;	timer4.h: 102: uif = sfr_TIM4.SR.byte;
                                    598 ; genPointerGet
      0001A8 C6 53 44         [ 1]  599 	ld	a, 0x5344
                                    600 ; genCast
                                    601 ; genAssign
      0001AB 90 97            [ 1]  602 	ld	yl, a
                                    603 ;	timer4.h: 108: sfr_TIM4.CR1.CEN = 1;
                                    604 ; genAssign
                                    605 ; genPointerSet
                                    606 ; peephole 0w removed dead load into x from #0x5340.
      0001AD 72 10 53 40      [ 1]  607 	bset	0x5340, #0
                                    608 ; peephole 203x replaced 'or' by 'bset' (index register) ('0x5340' -> '0x5340').
                                    609 ;	timer4.h: 111: us  = g_micros;
                                    610 ; genAssign
      0001B1 CEu00u02         [ 2]  611 	ldw	x, _g_micros+2
      0001B4 1F 08            [ 2]  612 	ldw	(0x08, sp), x
      0001B6 CEu00u00         [ 2]  613 	ldw	x, _g_micros+0
      0001B9 1F 06            [ 2]  614 	ldw	(0x06, sp), x
                                    615 ;	timer4.h: 115: us += ((uint16_t) cnt) << 2;
                                    616 ; genCast
                                    617 ; genAssign
      0001BB 5F               [ 1]  618 	clrw	x
      0001BC 7B 05            [ 1]  619 	ld	a, (0x05, sp)
      0001BE 97               [ 1]  620 	ld	xl, a
                                    621 ; genLeftShiftLiteral
      0001BF 58               [ 2]  622 	sllw	x
      0001C0 58               [ 2]  623 	sllw	x
                                    624 ; genCast
                                    625 ; genAssign
      0001C1 4F               [ 1]  626 	clr	a
      0001C2 0F 0A            [ 1]  627 	clr	(0x0a, sp)
                                    628 ; genPlus
      0001C4 72 FB 08         [ 2]  629 	addw	x, (0x08, sp)
      0001C7 1F 10            [ 2]  630 	ldw	(0x10, sp), x
      0001C9 19 07            [ 1]  631 	adc	a, (0x07, sp)
      0001CB 6B 0F            [ 1]  632 	ld	(0x0f, sp), a
      0001CD 4F               [ 1]  633 	clr	a
      0001CE 19 06            [ 1]  634 	adc	a, (0x06, sp)
      0001D0 6B 0E            [ 1]  635 	ld	(0x0e, sp), a
                                    636 ;	timer4.h: 119: if ((uif & 0x01) && (cnt != 250))
                                    637 ; genAnd
      0001D2 90 54            [ 2]  638 	srlw	y
                                    639 ; peephole j5 changed absolute to relative unconditional jump.
      0001D4 24 19            [ 1]  640 	jrnc	00110$
                                    641 ; peephole j6 removed jra by using inverse jump logic
                                    642 ; peephole j30 removed unused label 00160$.
                                    643 ; skipping generated iCode
                                    644 ; genCmpEQorNE
      0001D6 7B 05            [ 1]  645 	ld	a, (0x05, sp)
      0001D8 A1 FA            [ 1]  646 	cp	a, #0xfa
                                    647 ; peephole j5 changed absolute to relative unconditional jump.
      0001DA 27 13            [ 1]  648 	jreq	00110$
                                    649 ; peephole j10 removed jra by using inverse jump logic
                                    650 ; peephole j30 removed unused label 00162$.
                           0001DC   651 	Stimer4$delayMicroseconds$70 ==.
                                    652 ; skipping generated iCode
                                    653 ;	timer4.h: 120: us += 1000L;
                                    654 ; genPlus
      0001DC 1E 10            [ 2]  655 	ldw	x, (0x10, sp)
      0001DE 1C 03 E8         [ 2]  656 	addw	x, #0x03e8
      0001E1 1F 10            [ 2]  657 	ldw	(0x10, sp), x
      0001E3 7B 0F            [ 1]  658 	ld	a, (0x0f, sp)
      0001E5 A9 00            [ 1]  659 	adc	a, #0x00
      0001E7 6B 0F            [ 1]  660 	ld	(0x0f, sp), a
      0001E9 7B 0E            [ 1]  661 	ld	a, (0x0e, sp)
      0001EB A9 00            [ 1]  662 	adc	a, #0x00
      0001ED 6B 0E            [ 1]  663 	ld	(0x0e, sp), a
                                    664 ; genLabel
      0001EF                        665 00110$:
                           0001EF   666 	Stimer4$delayMicroseconds$71 ==.
                           0001EF   667 	Stimer4$delayMicroseconds$71 ==.
                           0001EF   668 	Stimer4$delayMicroseconds$72 ==.
                                    669 ;	timer4.c: 117: while (micros() - start < us)
                                    670 ; genMinus
      0001EF 1E 10            [ 2]  671 	ldw	x, (0x10, sp)
      0001F1 72 F0 03         [ 2]  672 	subw	x, (0x03, sp)
      0001F4 7B 0F            [ 1]  673 	ld	a, (0x0f, sp)
      0001F6 12 02            [ 1]  674 	sbc	a, (0x02, sp)
      0001F8 88               [ 1]  675 	push	a
                           0001F9   676 	Stimer4$delayMicroseconds$73 ==.
      0001F9 7B 0F            [ 1]  677 	ld	a, (0x0f, sp)
      0001FB 12 02            [ 1]  678 	sbc	a, (0x02, sp)
      0001FD 6B 0B            [ 1]  679 	ld	(0x0b, sp), a
                           0001FF   680 	Stimer4$delayMicroseconds$74 ==.
                                    681 ; genCmp
                                    682 ; genCmpTnz
                                    683 ; peephole 6 removed dead pop / push pair.
                           0001FF   684 	Stimer4$delayMicroseconds$75 ==.
      0001FF 13 17            [ 2]  685 	cpw	x, (0x17, sp)
      000201 84               [ 1]  686 	pop	a
                           000202   687 	Stimer4$delayMicroseconds$76 ==.
      000202 12 15            [ 1]  688 	sbc	a, (0x15, sp)
      000204 7B 0A            [ 1]  689 	ld	a, (0x0a, sp)
      000206 12 14            [ 1]  690 	sbc	a, (0x14, sp)
                                    691 ; peephole j5 changed absolute to relative unconditional jump.
      000208 24 03            [ 1]  692 	jrnc	00112$
                                    693 ; peephole j6 removed jra by using inverse jump logic
                                    694 ; peephole j30 removed unused label 00164$.
                                    695 ; skipping generated iCode
                           00020A   696 	Stimer4$delayMicroseconds$77 ==.
                           00020A   697 	Stimer4$delayMicroseconds$78 ==.
                                    698 ;	timer4.c: 118: NOP();
                                    699 ;	genInline
      00020A 9D               [ 1]  700 	nop
                                    701 ; genGoto
      00020B 20 92            [ 2]  702 	jra	00101$
                                    703 ; peephole j5 changed absolute to relative unconditional jump.
                                    704 ; genLabel
      00020D                        705 00112$:
                           00020D   706 	Stimer4$delayMicroseconds$79 ==.
                                    707 ;	timer4.c: 120: } // delayMicroseconds()
                                    708 ; genEndFunction
      00020D 1E 12            [ 2]  709 	ldw	x, (18, sp)
      00020F 5B 17            [ 2]  710 	addw	sp, #23
                           000211   711 	Stimer4$delayMicroseconds$80 ==.
      000211 FC               [ 2]  712 	jp	(x)
                           000212   713 	Stimer4$delayMicroseconds$81 ==.
                           000212   714 	Stimer4$TIM4_UPD_ISR$82 ==.
                                    715 ;	timer4.c: 137: ISR_HANDLER(TIM4_UPD_ISR, _TIM4_OVR_UIF_VECTOR_)
                                    716 ; genLabel
                                    717 ;	-----------------------------------------
                                    718 ;	 function TIM4_UPD_ISR
                                    719 ;	-----------------------------------------
                                    720 ;	Register assignment might be sub-optimal.
                                    721 ;	Stack space usage: 0 bytes.
      000212                        722 _TIM4_UPD_ISR:
                           000212   723 	Stimer4$TIM4_UPD_ISR$83 ==.
                           000212   724 	Stimer4$TIM4_UPD_ISR$84 ==.
                                    725 ;	timer4.c: 146: sfr_TIM4.SR.UIF = 0;
                                    726 ; genAssign
                                    727 ; genPointerSet
                                    728 ; peephole 0w removed dead load into x from #0x5344.
      000212 72 11 53 44      [ 1]  729 	bres	0x5344, #0
                                    730 ; peephole 205x replaced 'and' by 'bres' (index register) ('0x5344' -> '0x5344').
                           000216   731 	Stimer4$TIM4_UPD_ISR$85 ==.
                                    732 ;	timer4.c: 152: g_micros += 1000L;
                                    733 ; genPlus
      000216 CEu00u02         [ 2]  734 	ldw	x, _g_micros+2
      000219 1C 03 E8         [ 2]  735 	addw	x, #0x03e8
      00021C 90 CEu00u00      [ 2]  736 	ldw	y, _g_micros+0
      000220 24 02            [ 1]  737 	jrnc	00103$
      000222 90 5C            [ 1]  738 	incw	y
      000224                        739 00103$:
                                    740 ; genAssign
      000224 CFu00u02         [ 2]  741 	ldw	_g_micros+2, x
      000227 90 CFu00u00      [ 2]  742 	ldw	_g_micros+0, y
                           00022B   743 	Stimer4$TIM4_UPD_ISR$86 ==.
                                    744 ;	timer4.c: 153: g_millis++;
                                    745 ; genAssign
      00022B CEu00u02         [ 2]  746 	ldw	x, _g_millis+2
      00022E 90 CEu00u00      [ 2]  747 	ldw	y, _g_millis+0
                                    748 ; genPlus
      000232 5C               [ 1]  749 	incw	x
      000233 26 02            [ 1]  750 	jrne	00104$
      000235 90 5C            [ 1]  751 	incw	y
      000237                        752 00104$:
                                    753 ; genAssign
      000237 CFu00u02         [ 2]  754 	ldw	_g_millis+2, x
      00023A 90 CFu00u00      [ 2]  755 	ldw	_g_millis+0, y
                           00023E   756 	Stimer4$TIM4_UPD_ISR$87 ==.
                                    757 ;	timer4.c: 154: g_flagMilli = 1;
                                    758 ; genAssign
      00023E 35 01u00u00      [ 1]  759 	mov	_g_flagMilli+0, #0x01
                           000242   760 	Stimer4$TIM4_UPD_ISR$88 ==.
                                    761 ;	timer4.c: 156: return;
                                    762 ; genReturn
                                    763 ; genLabel
                                    764 ; peephole j30 removed unused label 00101$.
                           000242   765 	Stimer4$TIM4_UPD_ISR$89 ==.
                                    766 ;	timer4.c: 158: } // TIM4_UPD_ISR
                                    767 ; genEndFunction
                           000242   768 	Stimer4$TIM4_UPD_ISR$90 ==.
                           000242   769 	XG$TIM4_UPD_ISR$0$0 ==.
      000242 80               [11]  770 	iret
                           000243   771 	Stimer4$TIM4_UPD_ISR$91 ==.
                                    772 	.area CODE
                                    773 	.area CONST
                                    774 	.area INITIALIZER
                                    775 	.area CABS (ABS)
                                    776 
                                    777 	.area .debug_line (NOLOAD)
      000000 00 00 02 62            778 	.dw	0,Ldebug_line_end-Ldebug_line_start
      000004                        779 Ldebug_line_start:
      000004 00 02                  780 	.dw	2
      000006 00 00 00 A0            781 	.dw	0,Ldebug_line_stmt-6-Ldebug_line_start
      00000A 01                     782 	.db	1
      00000B 01                     783 	.db	1
      00000C FB                     784 	.db	-5
      00000D 0F                     785 	.db	15
      00000E 0A                     786 	.db	10
      00000F 00                     787 	.db	0
      000010 01                     788 	.db	1
      000011 01                     789 	.db	1
      000012 01                     790 	.db	1
      000013 01                     791 	.db	1
      000014 00                     792 	.db	0
      000015 00                     793 	.db	0
      000016 00                     794 	.db	0
      000017 01                     795 	.db	1
      000018 2F 75 73 72 2F 62 69   796 	.ascii "/usr/bin/../share/sdcc/include/stm8"
             6E 2F 2E 2E 2F 73 68
             61 72 65 2F 73 64 63
             63 2F 69 6E 63 6C 75
             64 65 2F 73 74 6D 38
      00003B 00                     797 	.db	0
      00003C 2F 75 73 72 2F 73 68   798 	.ascii "/usr/share/sdcc/include/stm8"
             61 72 65 2F 73 64 63
             63 2F 69 6E 63 6C 75
             64 65 2F 73 74 6D 38
      000058 00                     799 	.db	0
      000059 2F 75 73 72 2F 62 69   800 	.ascii "/usr/bin/../share/sdcc/include"
             6E 2F 2E 2E 2F 73 68
             61 72 65 2F 73 64 63
             63 2F 69 6E 63 6C 75
             64 65
      000077 00                     801 	.db	0
      000078 2F 75 73 72 2F 73 68   802 	.ascii "/usr/share/sdcc/include"
             61 72 65 2F 73 64 63
             63 2F 69 6E 63 6C 75
             64 65
      00008F 00                     803 	.db	0
      000090 00                     804 	.db	0
      000091 74 69 6D 65 72 34 2E   805 	.ascii "timer4.h"
             68
      000099 00                     806 	.db	0
      00009A 00                     807 	.uleb128	0
      00009B 00                     808 	.uleb128	0
      00009C 00                     809 	.uleb128	0
      00009D 74 69 6D 65 72 34 2E   810 	.ascii "timer4.c"
             63
      0000A5 00                     811 	.db	0
      0000A6 00                     812 	.uleb128	0
      0000A7 00                     813 	.uleb128	0
      0000A8 00                     814 	.uleb128	0
      0000A9 00                     815 	.db	0
      0000AA                        816 Ldebug_line_stmt:
      0000AA 00                     817 	.db	0
      0000AB 05                     818 	.uleb128	5
      0000AC 02                     819 	.db	2
      0000AD 00 00r00r00            820 	.dw	0,(Stimer4$micros$0)
      0000B1 03                     821 	.db	3
      0000B2 DA 00                  822 	.sleb128	90
      0000B4 01                     823 	.db	1
      0000B5 00                     824 	.db	0
      0000B6 05                     825 	.uleb128	5
      0000B7 02                     826 	.db	2
      0000B8 00 00r00r02            827 	.dw	0,(Stimer4$micros$3)
      0000BC 03                     828 	.db	3
      0000BD 06                     829 	.sleb128	6
      0000BE 01                     830 	.db	1
      0000BF 00                     831 	.db	0
      0000C0 05                     832 	.uleb128	5
      0000C1 02                     833 	.db	2
      0000C2 00 00r00r06            834 	.dw	0,(Stimer4$micros$4)
      0000C6 03                     835 	.db	3
      0000C7 03                     836 	.sleb128	3
      0000C8 01                     837 	.db	1
      0000C9 00                     838 	.db	0
      0000CA 05                     839 	.uleb128	5
      0000CB 02                     840 	.db	2
      0000CC 00 00r00r0B            841 	.dw	0,(Stimer4$micros$5)
      0000D0 03                     842 	.db	3
      0000D1 02                     843 	.sleb128	2
      0000D2 01                     844 	.db	1
      0000D3 00                     845 	.db	0
      0000D4 05                     846 	.uleb128	5
      0000D5 02                     847 	.db	2
      0000D6 00 00r00r10            848 	.dw	0,(Stimer4$micros$6)
      0000DA 03                     849 	.db	3
      0000DB 06                     850 	.sleb128	6
      0000DC 01                     851 	.db	1
      0000DD 00                     852 	.db	0
      0000DE 05                     853 	.uleb128	5
      0000DF 02                     854 	.db	2
      0000E0 00 00r00r14            855 	.dw	0,(Stimer4$micros$7)
      0000E4 03                     856 	.db	3
      0000E5 03                     857 	.sleb128	3
      0000E6 01                     858 	.db	1
      0000E7 00                     859 	.db	0
      0000E8 05                     860 	.uleb128	5
      0000E9 02                     861 	.db	2
      0000EA 00 00r00r1D            862 	.dw	0,(Stimer4$micros$8)
      0000EE 03                     863 	.db	3
      0000EF 04                     864 	.sleb128	4
      0000F0 01                     865 	.db	1
      0000F1 00                     866 	.db	0
      0000F2 05                     867 	.uleb128	5
      0000F3 02                     868 	.db	2
      0000F4 00 00r00r30            869 	.dw	0,(Stimer4$micros$9)
      0000F8 03                     870 	.db	3
      0000F9 04                     871 	.sleb128	4
      0000FA 01                     872 	.db	1
      0000FB 00                     873 	.db	0
      0000FC 05                     874 	.uleb128	5
      0000FD 02                     875 	.db	2
      0000FE 00 00r00r3B            876 	.dw	0,(Stimer4$micros$11)
      000102 03                     877 	.db	3
      000103 01                     878 	.sleb128	1
      000104 01                     879 	.db	1
      000105 00                     880 	.db	0
      000106 05                     881 	.uleb128	5
      000107 02                     882 	.db	2
      000108 00 00r00r46            883 	.dw	0,(Stimer4$micros$12)
      00010C 03                     884 	.db	3
      00010D 02                     885 	.sleb128	2
      00010E 01                     886 	.db	1
      00010F 00                     887 	.db	0
      000110 05                     888 	.uleb128	5
      000111 02                     889 	.db	2
      000112 00 00r00r47            890 	.dw	0,(Stimer4$micros$13)
      000116 03                     891 	.db	3
      000117 02                     892 	.sleb128	2
      000118 01                     893 	.db	1
      000119 09                     894 	.db	9
      00011A 00 03                  895 	.dw	1+Stimer4$micros$15-Stimer4$micros$13
      00011C 00                     896 	.db	0
      00011D 01                     897 	.uleb128	1
      00011E 01                     898 	.db	1
      00011F 04                     899 	.db	4
      000120 02                     900 	.uleb128	2
      000121 00                     901 	.db	0
      000122 05                     902 	.uleb128	5
      000123 02                     903 	.db	2
      000124 00 00r00r4A            904 	.dw	0,(Stimer4$TIM4_init$17)
      000128 03                     905 	.db	3
      000129 1E                     906 	.sleb128	30
      00012A 01                     907 	.db	1
      00012B 00                     908 	.db	0
      00012C 05                     909 	.uleb128	5
      00012D 02                     910 	.db	2
      00012E 00 00r00r4A            911 	.dw	0,(Stimer4$TIM4_init$19)
      000132 03                     912 	.db	3
      000133 08                     913 	.sleb128	8
      000134 01                     914 	.db	1
      000135 00                     915 	.db	0
      000136 05                     916 	.uleb128	5
      000137 02                     917 	.db	2
      000138 00 00r00r4E            918 	.dw	0,(Stimer4$TIM4_init$20)
      00013C 03                     919 	.db	3
      00013D 03                     920 	.sleb128	3
      00013E 01                     921 	.db	1
      00013F 00                     922 	.db	0
      000140 05                     923 	.uleb128	5
      000141 02                     924 	.db	2
      000142 00 00r00r52            925 	.dw	0,(Stimer4$TIM4_init$21)
      000146 03                     926 	.db	3
      000147 01                     927 	.sleb128	1
      000148 01                     928 	.db	1
      000149 00                     929 	.db	0
      00014A 05                     930 	.uleb128	5
      00014B 02                     931 	.db	2
      00014C 00 00r00r59            932 	.dw	0,(Stimer4$TIM4_init$22)
      000150 03                     933 	.db	3
      000151 01                     934 	.sleb128	1
      000152 01                     935 	.db	1
      000153 00                     936 	.db	0
      000154 05                     937 	.uleb128	5
      000155 02                     938 	.db	2
      000156 00 00r00r60            939 	.dw	0,(Stimer4$TIM4_init$23)
      00015A 03                     940 	.db	3
      00015B 03                     941 	.sleb128	3
      00015C 01                     942 	.db	1
      00015D 00                     943 	.db	0
      00015E 05                     944 	.uleb128	5
      00015F 02                     945 	.db	2
      000160 00 00r00r64            946 	.dw	0,(Stimer4$TIM4_init$24)
      000164 03                     947 	.db	3
      000165 03                     948 	.sleb128	3
      000166 01                     949 	.db	1
      000167 00                     950 	.db	0
      000168 05                     951 	.uleb128	5
      000169 02                     952 	.db	2
      00016A 00 00r00r68            953 	.dw	0,(Stimer4$TIM4_init$25)
      00016E 03                     954 	.db	3
      00016F 03                     955 	.sleb128	3
      000170 01                     956 	.db	1
      000171 00                     957 	.db	0
      000172 05                     958 	.uleb128	5
      000173 02                     959 	.db	2
      000174 00 00r00r6C            960 	.dw	0,(Stimer4$TIM4_init$26)
      000178 03                     961 	.db	3
      000179 03                     962 	.sleb128	3
      00017A 01                     963 	.db	1
      00017B 00                     964 	.db	0
      00017C 05                     965 	.uleb128	5
      00017D 02                     966 	.db	2
      00017E 00 00r00r76            967 	.dw	0,(Stimer4$TIM4_init$27)
      000182 03                     968 	.db	3
      000183 03                     969 	.sleb128	3
      000184 01                     970 	.db	1
      000185 00                     971 	.db	0
      000186 05                     972 	.uleb128	5
      000187 02                     973 	.db	2
      000188 00 00r00r7A            974 	.dw	0,(Stimer4$TIM4_init$28)
      00018C 03                     975 	.db	3
      00018D 03                     976 	.sleb128	3
      00018E 01                     977 	.db	1
      00018F 00                     978 	.db	0
      000190 05                     979 	.uleb128	5
      000191 02                     980 	.db	2
      000192 00 00r00r7E            981 	.dw	0,(Stimer4$TIM4_init$29)
      000196 03                     982 	.db	3
      000197 03                     983 	.sleb128	3
      000198 01                     984 	.db	1
      000199 00                     985 	.db	0
      00019A 05                     986 	.uleb128	5
      00019B 02                     987 	.db	2
      00019C 00 00r00r82            988 	.dw	0,(Stimer4$TIM4_init$30)
      0001A0 03                     989 	.db	3
      0001A1 02                     990 	.sleb128	2
      0001A2 01                     991 	.db	1
      0001A3 09                     992 	.db	9
      0001A4 00 01                  993 	.dw	1+Stimer4$TIM4_init$31-Stimer4$TIM4_init$30
      0001A6 00                     994 	.db	0
      0001A7 01                     995 	.uleb128	1
      0001A8 01                     996 	.db	1
      0001A9 04                     997 	.db	4
      0001AA 02                     998 	.uleb128	2
      0001AB 00                     999 	.db	0
      0001AC 05                    1000 	.uleb128	5
      0001AD 02                    1001 	.db	2
      0001AE 00 00r00r83           1002 	.dw	0,(Stimer4$delay$33)
      0001B2 03                    1003 	.db	3
      0001B3 D4 00                 1004 	.sleb128	84
      0001B5 01                    1005 	.db	1
      0001B6 00                    1006 	.db	0
      0001B7 05                    1007 	.uleb128	5
      0001B8 02                    1008 	.db	2
      0001B9 00 00r00rCD           1009 	.dw	0,(Stimer4$delay$40)
      0001BD 03                    1010 	.db	3
      0001BE 05                    1011 	.sleb128	5
      0001BF 01                    1012 	.db	1
      0001C0 00                    1013 	.db	0
      0001C1 05                    1014 	.uleb128	5
      0001C2 02                    1015 	.db	2
      0001C3 00 00r00rE2           1016 	.dw	0,(Stimer4$delay$47)
      0001C7 03                    1017 	.db	3
      0001C8 01                    1018 	.sleb128	1
      0001C9 01                    1019 	.db	1
      0001CA 00                    1020 	.db	0
      0001CB 05                    1021 	.uleb128	5
      0001CC 02                    1022 	.db	2
      0001CD 00 00r01r32           1023 	.dw	0,(Stimer4$delay$51)
      0001D1 03                    1024 	.db	3
      0001D2 00                    1025 	.sleb128	0
      0001D3 01                    1026 	.db	1
      0001D4 00                    1027 	.db	0
      0001D5 05                    1028 	.uleb128	5
      0001D6 02                    1029 	.db	2
      0001D7 00 00r01r4D           1030 	.dw	0,(Stimer4$delay$57)
      0001DB 03                    1031 	.db	3
      0001DC 01                    1032 	.sleb128	1
      0001DD 01                    1033 	.db	1
      0001DE 00                    1034 	.db	0
      0001DF 05                    1035 	.uleb128	5
      0001E0 02                    1036 	.db	2
      0001E1 00 00r01r50           1037 	.dw	0,(Stimer4$delay$58)
      0001E5 03                    1038 	.db	3
      0001E6 02                    1039 	.sleb128	2
      0001E7 01                    1040 	.db	1
      0001E8 00                    1041 	.db	0
      0001E9 05                    1042 	.uleb128	5
      0001EA 02                    1043 	.db	2
      0001EB 00 00r01r55           1044 	.dw	0,(Stimer4$delayMicroseconds$61)
      0001EF 03                    1045 	.db	3
      0001F0 12                    1046 	.sleb128	18
      0001F1 01                    1047 	.db	1
      0001F2 00                    1048 	.db	0
      0001F3 05                    1049 	.uleb128	5
      0001F4 02                    1050 	.db	2
      0001F5 00 00r01r9F           1051 	.dw	0,(Stimer4$delayMicroseconds$68)
      0001F9 03                    1052 	.db	3
      0001FA 05                    1053 	.sleb128	5
      0001FB 01                    1054 	.db	1
      0001FC 00                    1055 	.db	0
      0001FD 05                    1056 	.uleb128	5
      0001FE 02                    1057 	.db	2
      0001FF 00 00r01rEF           1058 	.dw	0,(Stimer4$delayMicroseconds$72)
      000203 03                    1059 	.db	3
      000204 00                    1060 	.sleb128	0
      000205 01                    1061 	.db	1
      000206 00                    1062 	.db	0
      000207 05                    1063 	.uleb128	5
      000208 02                    1064 	.db	2
      000209 00 00r02r0A           1065 	.dw	0,(Stimer4$delayMicroseconds$78)
      00020D 03                    1066 	.db	3
      00020E 01                    1067 	.sleb128	1
      00020F 01                    1068 	.db	1
      000210 00                    1069 	.db	0
      000211 05                    1070 	.uleb128	5
      000212 02                    1071 	.db	2
      000213 00 00r02r0D           1072 	.dw	0,(Stimer4$delayMicroseconds$79)
      000217 03                    1073 	.db	3
      000218 02                    1074 	.sleb128	2
      000219 01                    1075 	.db	1
      00021A 00                    1076 	.db	0
      00021B 05                    1077 	.uleb128	5
      00021C 02                    1078 	.db	2
      00021D 00 00r02r12           1079 	.dw	0,(Stimer4$TIM4_UPD_ISR$82)
      000221 03                    1080 	.db	3
      000222 11                    1081 	.sleb128	17
      000223 01                    1082 	.db	1
      000224 00                    1083 	.db	0
      000225 05                    1084 	.uleb128	5
      000226 02                    1085 	.db	2
      000227 00 00r02r12           1086 	.dw	0,(Stimer4$TIM4_UPD_ISR$84)
      00022B 03                    1087 	.db	3
      00022C 09                    1088 	.sleb128	9
      00022D 01                    1089 	.db	1
      00022E 00                    1090 	.db	0
      00022F 05                    1091 	.uleb128	5
      000230 02                    1092 	.db	2
      000231 00 00r02r16           1093 	.dw	0,(Stimer4$TIM4_UPD_ISR$85)
      000235 03                    1094 	.db	3
      000236 06                    1095 	.sleb128	6
      000237 01                    1096 	.db	1
      000238 00                    1097 	.db	0
      000239 05                    1098 	.uleb128	5
      00023A 02                    1099 	.db	2
      00023B 00 00r02r2B           1100 	.dw	0,(Stimer4$TIM4_UPD_ISR$86)
      00023F 03                    1101 	.db	3
      000240 01                    1102 	.sleb128	1
      000241 01                    1103 	.db	1
      000242 00                    1104 	.db	0
      000243 05                    1105 	.uleb128	5
      000244 02                    1106 	.db	2
      000245 00 00r02r3E           1107 	.dw	0,(Stimer4$TIM4_UPD_ISR$87)
      000249 03                    1108 	.db	3
      00024A 01                    1109 	.sleb128	1
      00024B 01                    1110 	.db	1
      00024C 00                    1111 	.db	0
      00024D 05                    1112 	.uleb128	5
      00024E 02                    1113 	.db	2
      00024F 00 00r02r42           1114 	.dw	0,(Stimer4$TIM4_UPD_ISR$88)
      000253 03                    1115 	.db	3
      000254 02                    1116 	.sleb128	2
      000255 01                    1117 	.db	1
      000256 00                    1118 	.db	0
      000257 05                    1119 	.uleb128	5
      000258 02                    1120 	.db	2
      000259 00 00r02r42           1121 	.dw	0,(Stimer4$TIM4_UPD_ISR$89)
      00025D 03                    1122 	.db	3
      00025E 02                    1123 	.sleb128	2
      00025F 01                    1124 	.db	1
      000260 09                    1125 	.db	9
      000261 00 01                 1126 	.dw	1+Stimer4$TIM4_UPD_ISR$90-Stimer4$TIM4_UPD_ISR$89
      000263 00                    1127 	.db	0
      000264 01                    1128 	.uleb128	1
      000265 01                    1129 	.db	1
      000266                       1130 Ldebug_line_end:
                                   1131 
                                   1132 	.area .debug_loc (NOLOAD)
      000000                       1133 Ldebug_loc_start:
      000000 00 00r02r12           1134 	.dw	0,(Stimer4$TIM4_UPD_ISR$83)
      000004 00 00r02r43           1135 	.dw	0,(Stimer4$TIM4_UPD_ISR$91)
      000008 00 02                 1136 	.dw	2
      00000A 78                    1137 	.db	120
      00000B 01                    1138 	.sleb128	1
      00000C 00 00r02r11           1139 	.dw	0,(Stimer4$delayMicroseconds$80)
      000010 00 00r02r12           1140 	.dw	0,(Stimer4$delayMicroseconds$81)
      000014 00 02                 1141 	.dw	2
      000016 78                    1142 	.db	120
      000017 7B                    1143 	.sleb128	-5
      000018 00 00r02r02           1144 	.dw	0,(Stimer4$delayMicroseconds$76)
      00001C 00 00r02r11           1145 	.dw	0,(Stimer4$delayMicroseconds$80)
      000020 00 02                 1146 	.dw	2
      000022 78                    1147 	.db	120
      000023 12                    1148 	.sleb128	18
      000024 00 00r01rFF           1149 	.dw	0,(Stimer4$delayMicroseconds$75)
      000028 00 00r02r02           1150 	.dw	0,(Stimer4$delayMicroseconds$76)
      00002C 00 02                 1151 	.dw	2
      00002E 78                    1152 	.db	120
      00002F 13                    1153 	.sleb128	19
      000030 00 00r01rFF           1154 	.dw	0,(Stimer4$delayMicroseconds$74)
      000034 00 00r01rFF           1155 	.dw	0,(Stimer4$delayMicroseconds$75)
      000038 00 02                 1156 	.dw	2
      00003A 78                    1157 	.db	120
      00003B 12                    1158 	.sleb128	18
      00003C 00 00r01rF9           1159 	.dw	0,(Stimer4$delayMicroseconds$73)
      000040 00 00r01rFF           1160 	.dw	0,(Stimer4$delayMicroseconds$74)
      000044 00 02                 1161 	.dw	2
      000046 78                    1162 	.db	120
      000047 13                    1163 	.sleb128	19
      000048 00 00r01rDC           1164 	.dw	0,(Stimer4$delayMicroseconds$70)
      00004C 00 00r01rF9           1165 	.dw	0,(Stimer4$delayMicroseconds$73)
      000050 00 02                 1166 	.dw	2
      000052 78                    1167 	.db	120
      000053 12                    1168 	.sleb128	18
      000054 00 00r01r90           1169 	.dw	0,(Stimer4$delayMicroseconds$65)
      000058 00 00r01rDC           1170 	.dw	0,(Stimer4$delayMicroseconds$70)
      00005C 00 02                 1171 	.dw	2
      00005E 78                    1172 	.db	120
      00005F 12                    1173 	.sleb128	18
      000060 00 00r01r57           1174 	.dw	0,(Stimer4$delayMicroseconds$63)
      000064 00 00r01r90           1175 	.dw	0,(Stimer4$delayMicroseconds$65)
      000068 00 02                 1176 	.dw	2
      00006A 78                    1177 	.db	120
      00006B 12                    1178 	.sleb128	18
      00006C 00 00r01r55           1179 	.dw	0,(Stimer4$delayMicroseconds$62)
      000070 00 00r01r57           1180 	.dw	0,(Stimer4$delayMicroseconds$63)
      000074 00 02                 1181 	.dw	2
      000076 78                    1182 	.db	120
      000077 01                    1183 	.sleb128	1
      000078 00 00r01r54           1184 	.dw	0,(Stimer4$delay$59)
      00007C 00 00r01r55           1185 	.dw	0,(Stimer4$delay$60)
      000080 00 02                 1186 	.dw	2
      000082 78                    1187 	.db	120
      000083 7B                    1188 	.sleb128	-5
      000084 00 00r01r45           1189 	.dw	0,(Stimer4$delay$55)
      000088 00 00r01r54           1190 	.dw	0,(Stimer4$delay$59)
      00008C 00 02                 1191 	.dw	2
      00008E 78                    1192 	.db	120
      00008F 12                    1193 	.sleb128	18
      000090 00 00r01r42           1194 	.dw	0,(Stimer4$delay$54)
      000094 00 00r01r45           1195 	.dw	0,(Stimer4$delay$55)
      000098 00 02                 1196 	.dw	2
      00009A 78                    1197 	.db	120
      00009B 13                    1198 	.sleb128	19
      00009C 00 00r01r42           1199 	.dw	0,(Stimer4$delay$53)
      0000A0 00 00r01r42           1200 	.dw	0,(Stimer4$delay$54)
      0000A4 00 02                 1201 	.dw	2
      0000A6 78                    1202 	.db	120
      0000A7 12                    1203 	.sleb128	18
      0000A8 00 00r01r3C           1204 	.dw	0,(Stimer4$delay$52)
      0000AC 00 00r01r42           1205 	.dw	0,(Stimer4$delay$53)
      0000B0 00 02                 1206 	.dw	2
      0000B2 78                    1207 	.db	120
      0000B3 13                    1208 	.sleb128	19
      0000B4 00 00r01r1F           1209 	.dw	0,(Stimer4$delay$49)
      0000B8 00 00r01r3C           1210 	.dw	0,(Stimer4$delay$52)
      0000BC 00 02                 1211 	.dw	2
      0000BE 78                    1212 	.db	120
      0000BF 12                    1213 	.sleb128	18
      0000C0 00 00r00rDE           1214 	.dw	0,(Stimer4$delay$46)
      0000C4 00 00r01r1F           1215 	.dw	0,(Stimer4$delay$49)
      0000C8 00 02                 1216 	.dw	2
      0000CA 78                    1217 	.db	120
      0000CB 12                    1218 	.sleb128	18
      0000CC 00 00r00rD9           1219 	.dw	0,(Stimer4$delay$45)
      0000D0 00 00r00rDE           1220 	.dw	0,(Stimer4$delay$46)
      0000D4 00 02                 1221 	.dw	2
      0000D6 78                    1222 	.db	120
      0000D7 1A                    1223 	.sleb128	26
      0000D8 00 00r00rD7           1224 	.dw	0,(Stimer4$delay$44)
      0000DC 00 00r00rD9           1225 	.dw	0,(Stimer4$delay$45)
      0000E0 00 02                 1226 	.dw	2
      0000E2 78                    1227 	.db	120
      0000E3 18                    1228 	.sleb128	24
      0000E4 00 00r00rD5           1229 	.dw	0,(Stimer4$delay$43)
      0000E8 00 00r00rD7           1230 	.dw	0,(Stimer4$delay$44)
      0000EC 00 02                 1231 	.dw	2
      0000EE 78                    1232 	.db	120
      0000EF 17                    1233 	.sleb128	23
      0000F0 00 00r00rD3           1234 	.dw	0,(Stimer4$delay$42)
      0000F4 00 00r00rD5           1235 	.dw	0,(Stimer4$delay$43)
      0000F8 00 02                 1236 	.dw	2
      0000FA 78                    1237 	.db	120
      0000FB 16                    1238 	.sleb128	22
      0000FC 00 00r00rD0           1239 	.dw	0,(Stimer4$delay$41)
      000100 00 00r00rD3           1240 	.dw	0,(Stimer4$delay$42)
      000104 00 02                 1241 	.dw	2
      000106 78                    1242 	.db	120
      000107 14                    1243 	.sleb128	20
      000108 00 00r00rBE           1244 	.dw	0,(Stimer4$delay$37)
      00010C 00 00r00rD0           1245 	.dw	0,(Stimer4$delay$41)
      000110 00 02                 1246 	.dw	2
      000112 78                    1247 	.db	120
      000113 12                    1248 	.sleb128	18
      000114 00 00r00r85           1249 	.dw	0,(Stimer4$delay$35)
      000118 00 00r00rBE           1250 	.dw	0,(Stimer4$delay$37)
      00011C 00 02                 1251 	.dw	2
      00011E 78                    1252 	.db	120
      00011F 12                    1253 	.sleb128	18
      000120 00 00r00r83           1254 	.dw	0,(Stimer4$delay$34)
      000124 00 00r00r85           1255 	.dw	0,(Stimer4$delay$35)
      000128 00 02                 1256 	.dw	2
      00012A 78                    1257 	.db	120
      00012B 01                    1258 	.sleb128	1
      00012C 00 00 00 00           1259 	.dw	0,0
      000130 00 00 00 00           1260 	.dw	0,0
      000134 00 00r00r4A           1261 	.dw	0,(Stimer4$TIM4_init$18)
      000138 00 00r00r83           1262 	.dw	0,(Stimer4$TIM4_init$32)
      00013C 00 02                 1263 	.dw	2
      00013E 78                    1264 	.db	120
      00013F 01                    1265 	.sleb128	1
      000140 00 00 00 00           1266 	.dw	0,0
      000144 00 00 00 00           1267 	.dw	0,0
      000148 00 00r00r49           1268 	.dw	0,(Stimer4$micros$14)
      00014C 00 00r00r4A           1269 	.dw	0,(Stimer4$micros$16)
      000150 00 02                 1270 	.dw	2
      000152 78                    1271 	.db	120
      000153 01                    1272 	.sleb128	1
      000154 00 00r00r3B           1273 	.dw	0,(Stimer4$micros$10)
      000158 00 00r00r49           1274 	.dw	0,(Stimer4$micros$14)
      00015C 00 02                 1275 	.dw	2
      00015E 78                    1276 	.db	120
      00015F 0B                    1277 	.sleb128	11
      000160 00 00r00r02           1278 	.dw	0,(Stimer4$micros$2)
      000164 00 00r00r3B           1279 	.dw	0,(Stimer4$micros$10)
      000168 00 02                 1280 	.dw	2
      00016A 78                    1281 	.db	120
      00016B 0B                    1282 	.sleb128	11
      00016C 00 00r00r00           1283 	.dw	0,(Stimer4$micros$1)
      000170 00 00r00r02           1284 	.dw	0,(Stimer4$micros$2)
      000174 00 02                 1285 	.dw	2
      000176 78                    1286 	.db	120
      000177 01                    1287 	.sleb128	1
      000178 00 00 00 00           1288 	.dw	0,0
      00017C 00 00 00 00           1289 	.dw	0,0
                                   1290 
                                   1291 	.area .debug_abbrev (NOLOAD)
      000000                       1292 Ldebug_abbrev:
      000000 01                    1293 	.uleb128	1
      000001 11                    1294 	.uleb128	17
      000002 01                    1295 	.db	1
      000003 03                    1296 	.uleb128	3
      000004 08                    1297 	.uleb128	8
      000005 10                    1298 	.uleb128	16
      000006 06                    1299 	.uleb128	6
      000007 13                    1300 	.uleb128	19
      000008 0B                    1301 	.uleb128	11
      000009 25                    1302 	.uleb128	37
      00000A 08                    1303 	.uleb128	8
      00000B 00                    1304 	.uleb128	0
      00000C 00                    1305 	.uleb128	0
      00000D 02                    1306 	.uleb128	2
      00000E 24                    1307 	.uleb128	36
      00000F 00                    1308 	.db	0
      000010 03                    1309 	.uleb128	3
      000011 08                    1310 	.uleb128	8
      000012 0B                    1311 	.uleb128	11
      000013 0B                    1312 	.uleb128	11
      000014 3E                    1313 	.uleb128	62
      000015 0B                    1314 	.uleb128	11
      000016 00                    1315 	.uleb128	0
      000017 00                    1316 	.uleb128	0
      000018 03                    1317 	.uleb128	3
      000019 2E                    1318 	.uleb128	46
      00001A 01                    1319 	.db	1
      00001B 01                    1320 	.uleb128	1
      00001C 13                    1321 	.uleb128	19
      00001D 03                    1322 	.uleb128	3
      00001E 08                    1323 	.uleb128	8
      00001F 11                    1324 	.uleb128	17
      000020 01                    1325 	.uleb128	1
      000021 12                    1326 	.uleb128	18
      000022 01                    1327 	.uleb128	1
      000023 3F                    1328 	.uleb128	63
      000024 0C                    1329 	.uleb128	12
      000025 40                    1330 	.uleb128	64
      000026 06                    1331 	.uleb128	6
      000027 49                    1332 	.uleb128	73
      000028 13                    1333 	.uleb128	19
      000029 00                    1334 	.uleb128	0
      00002A 00                    1335 	.uleb128	0
      00002B 04                    1336 	.uleb128	4
      00002C 34                    1337 	.uleb128	52
      00002D 00                    1338 	.db	0
      00002E 02                    1339 	.uleb128	2
      00002F 0A                    1340 	.uleb128	10
      000030 03                    1341 	.uleb128	3
      000031 08                    1342 	.uleb128	8
      000032 49                    1343 	.uleb128	73
      000033 13                    1344 	.uleb128	19
      000034 00                    1345 	.uleb128	0
      000035 00                    1346 	.uleb128	0
      000036 05                    1347 	.uleb128	5
      000037 2E                    1348 	.uleb128	46
      000038 00                    1349 	.db	0
      000039 03                    1350 	.uleb128	3
      00003A 08                    1351 	.uleb128	8
      00003B 11                    1352 	.uleb128	17
      00003C 01                    1353 	.uleb128	1
      00003D 12                    1354 	.uleb128	18
      00003E 01                    1355 	.uleb128	1
      00003F 3F                    1356 	.uleb128	63
      000040 0C                    1357 	.uleb128	12
      000041 40                    1358 	.uleb128	64
      000042 06                    1359 	.uleb128	6
      000043 00                    1360 	.uleb128	0
      000044 00                    1361 	.uleb128	0
      000045 06                    1362 	.uleb128	6
      000046 2E                    1363 	.uleb128	46
      000047 01                    1364 	.db	1
      000048 01                    1365 	.uleb128	1
      000049 13                    1366 	.uleb128	19
      00004A 03                    1367 	.uleb128	3
      00004B 08                    1368 	.uleb128	8
      00004C 11                    1369 	.uleb128	17
      00004D 01                    1370 	.uleb128	1
      00004E 3F                    1371 	.uleb128	63
      00004F 0C                    1372 	.uleb128	12
      000050 00                    1373 	.uleb128	0
      000051 00                    1374 	.uleb128	0
      000052 07                    1375 	.uleb128	7
      000053 05                    1376 	.uleb128	5
      000054 00                    1377 	.db	0
      000055 02                    1378 	.uleb128	2
      000056 0A                    1379 	.uleb128	10
      000057 03                    1380 	.uleb128	3
      000058 08                    1381 	.uleb128	8
      000059 49                    1382 	.uleb128	73
      00005A 13                    1383 	.uleb128	19
      00005B 00                    1384 	.uleb128	0
      00005C 00                    1385 	.uleb128	0
      00005D 08                    1386 	.uleb128	8
      00005E 0B                    1387 	.uleb128	11
      00005F 01                    1388 	.db	1
      000060 01                    1389 	.uleb128	1
      000061 13                    1390 	.uleb128	19
      000062 11                    1391 	.uleb128	17
      000063 01                    1392 	.uleb128	1
      000064 12                    1393 	.uleb128	18
      000065 01                    1394 	.uleb128	1
      000066 00                    1395 	.uleb128	0
      000067 00                    1396 	.uleb128	0
      000068 09                    1397 	.uleb128	9
      000069 0B                    1398 	.uleb128	11
      00006A 01                    1399 	.db	1
      00006B 00                    1400 	.uleb128	0
      00006C 00                    1401 	.uleb128	0
      00006D 0A                    1402 	.uleb128	10
      00006E 0B                    1403 	.uleb128	11
      00006F 01                    1404 	.db	1
      000070 11                    1405 	.uleb128	17
      000071 01                    1406 	.uleb128	1
      000072 12                    1407 	.uleb128	18
      000073 01                    1408 	.uleb128	1
      000074 00                    1409 	.uleb128	0
      000075 00                    1410 	.uleb128	0
      000076 0B                    1411 	.uleb128	11
      000077 2E                    1412 	.uleb128	46
      000078 00                    1413 	.db	0
      000079 03                    1414 	.uleb128	3
      00007A 08                    1415 	.uleb128	8
      00007B 11                    1416 	.uleb128	17
      00007C 01                    1417 	.uleb128	1
      00007D 12                    1418 	.uleb128	18
      00007E 01                    1419 	.uleb128	1
      00007F 36                    1420 	.uleb128	54
      000080 0B                    1421 	.uleb128	11
      000081 3F                    1422 	.uleb128	63
      000082 0C                    1423 	.uleb128	12
      000083 40                    1424 	.uleb128	64
      000084 06                    1425 	.uleb128	6
      000085 00                    1426 	.uleb128	0
      000086 00                    1427 	.uleb128	0
      000087 0C                    1428 	.uleb128	12
      000088 35                    1429 	.uleb128	53
      000089 00                    1430 	.db	0
      00008A 49                    1431 	.uleb128	73
      00008B 13                    1432 	.uleb128	19
      00008C 00                    1433 	.uleb128	0
      00008D 00                    1434 	.uleb128	0
      00008E 0D                    1435 	.uleb128	13
      00008F 34                    1436 	.uleb128	52
      000090 00                    1437 	.db	0
      000091 02                    1438 	.uleb128	2
      000092 0A                    1439 	.uleb128	10
      000093 03                    1440 	.uleb128	3
      000094 08                    1441 	.uleb128	8
      000095 3C                    1442 	.uleb128	60
      000096 0C                    1443 	.uleb128	12
      000097 3F                    1444 	.uleb128	63
      000098 0C                    1445 	.uleb128	12
      000099 49                    1446 	.uleb128	73
      00009A 13                    1447 	.uleb128	19
      00009B 00                    1448 	.uleb128	0
      00009C 00                    1449 	.uleb128	0
      00009D 00                    1450 	.uleb128	0
                                   1451 
                                   1452 	.area .debug_info (NOLOAD)
      000000 00 00 02 B9           1453 	.dw	0,Ldebug_info_end-Ldebug_info_start
      000004                       1454 Ldebug_info_start:
      000004 00 02                 1455 	.dw	2
      000006 00 00r00r00           1456 	.dw	0,(Ldebug_abbrev)
      00000A 04                    1457 	.db	4
      00000B 01                    1458 	.uleb128	1
      00000C 74 69 6D 65 72 34 2E  1459 	.ascii "timer4.c"
             63
      000014 00                    1460 	.db	0
      000015 00 00r00r00           1461 	.dw	0,(Ldebug_line_start+-4)
      000019 01                    1462 	.db	1
      00001A 53 44 43 43 20 76 65  1463 	.ascii "SDCC version 4.4.0 #14620"
             72 73 69 6F 6E 20 34
             2E 34 2E 30 20 23 31
             34 36 32 30
      000033 00                    1464 	.db	0
      000034 02                    1465 	.uleb128	2
      000035 75 6E 73 69 67 6E 65  1466 	.ascii "unsigned long"
             64 20 6C 6F 6E 67
      000042 00                    1467 	.db	0
      000043 04                    1468 	.db	4
      000044 07                    1469 	.db	7
      000045 03                    1470 	.uleb128	3
      000046 00 00 00 90           1471 	.dw	0,144
      00004A 6D 69 63 72 6F 73     1472 	.ascii "micros"
      000050 00                    1473 	.db	0
      000051 00 00r00r00           1474 	.dw	0,(_micros)
      000055 00 00r00r4A           1475 	.dw	0,(XFtimer4$micros$0$0+1)
      000059 00                    1476 	.db	0
      00005A 00 00r01r48           1477 	.dw	0,(Ldebug_loc_start+328)
      00005E 00 00 00 34           1478 	.dw	0,52
      000062 04                    1479 	.uleb128	4
      000063 02                    1480 	.db	2
      000064 91                    1481 	.db	145
      000065 76                    1482 	.sleb128	-10
      000066 63 6E 74              1483 	.ascii "cnt"
      000069 00                    1484 	.db	0
      00006A 00 00 00 90           1485 	.dw	0,144
      00006E 04                    1486 	.uleb128	4
      00006F 02                    1487 	.db	2
      000070 91                    1488 	.db	145
      000071 77                    1489 	.sleb128	-9
      000072 75 69 66              1490 	.ascii "uif"
      000075 00                    1491 	.db	0
      000076 00 00 00 90           1492 	.dw	0,144
      00007A 04                    1493 	.uleb128	4
      00007B 0C                    1494 	.db	12
      00007C 52                    1495 	.db	82
      00007D 93                    1496 	.db	147
      00007E 01                    1497 	.uleb128	1
      00007F 51                    1498 	.db	81
      000080 93                    1499 	.db	147
      000081 01                    1500 	.uleb128	1
      000082 54                    1501 	.db	84
      000083 93                    1502 	.db	147
      000084 01                    1503 	.uleb128	1
      000085 53                    1504 	.db	83
      000086 93                    1505 	.db	147
      000087 01                    1506 	.uleb128	1
      000088 75 73                 1507 	.ascii "us"
      00008A 00                    1508 	.db	0
      00008B 00 00 00 34           1509 	.dw	0,52
      00008F 00                    1510 	.uleb128	0
      000090 02                    1511 	.uleb128	2
      000091 75 6E 73 69 67 6E 65  1512 	.ascii "unsigned char"
             64 20 63 68 61 72
      00009E 00                    1513 	.db	0
      00009F 01                    1514 	.db	1
      0000A0 08                    1515 	.db	8
      0000A1 05                    1516 	.uleb128	5
      0000A2 54 49 4D 34 5F 69 6E  1517 	.ascii "TIM4_init"
             69 74
      0000AB 00                    1518 	.db	0
      0000AC 00 00r00r4A           1519 	.dw	0,(_TIM4_init)
      0000B0 00 00r00r83           1520 	.dw	0,(XG$TIM4_init$0$0+1)
      0000B4 01                    1521 	.db	1
      0000B5 00 00r01r34           1522 	.dw	0,(Ldebug_loc_start+308)
      0000B9 06                    1523 	.uleb128	6
      0000BA 00 00 01 8E           1524 	.dw	0,398
      0000BE 64 65 6C 61 79        1525 	.ascii "delay"
      0000C3 00                    1526 	.db	0
      0000C4 00 00r00r83           1527 	.dw	0,(_delay)
      0000C8 01                    1528 	.db	1
      0000C9 07                    1529 	.uleb128	7
      0000CA 02                    1530 	.db	2
      0000CB 91                    1531 	.db	145
      0000CC 02                    1532 	.sleb128	2
      0000CD 6D 73                 1533 	.ascii "ms"
      0000CF 00                    1534 	.db	0
      0000D0 00 00 00 34           1535 	.dw	0,52
      0000D4 08                    1536 	.uleb128	8
      0000D5 00 00 01 1B           1537 	.dw	0,283
      0000D9 00 00r00rC9           1538 	.dw	0,(Stimer4$delay$38)
      0000DD 00 00r00rCD           1539 	.dw	0,(Stimer4$delay$39)
      0000E1 09                    1540 	.uleb128	9
      0000E2 0A                    1541 	.uleb128	10
      0000E3 00 00r00r85           1542 	.dw	0,(Stimer4$delay$36)
      0000E7 00 00r00rC9           1543 	.dw	0,(Stimer4$delay$38)
      0000EB 04                    1544 	.uleb128	4
      0000EC 02                    1545 	.db	2
      0000ED 91                    1546 	.db	145
      0000EE 76                    1547 	.sleb128	-10
      0000EF 63 6E 74              1548 	.ascii "cnt"
      0000F2 00                    1549 	.db	0
      0000F3 00 00 00 90           1550 	.dw	0,144
      0000F7 04                    1551 	.uleb128	4
      0000F8 02                    1552 	.db	2
      0000F9 91                    1553 	.db	145
      0000FA 77                    1554 	.sleb128	-9
      0000FB 75 69 66              1555 	.ascii "uif"
      0000FE 00                    1556 	.db	0
      0000FF 00 00 00 90           1557 	.dw	0,144
      000103 04                    1558 	.uleb128	4
      000104 0C                    1559 	.db	12
      000105 52                    1560 	.db	82
      000106 93                    1561 	.db	147
      000107 01                    1562 	.uleb128	1
      000108 51                    1563 	.db	81
      000109 93                    1564 	.db	147
      00010A 01                    1565 	.uleb128	1
      00010B 54                    1566 	.db	84
      00010C 93                    1567 	.db	147
      00010D 01                    1568 	.uleb128	1
      00010E 53                    1569 	.db	83
      00010F 93                    1570 	.db	147
      000110 01                    1571 	.uleb128	1
      000111 75 73                 1572 	.ascii "us"
      000113 00                    1573 	.db	0
      000114 00 00 00 34           1574 	.dw	0,52
      000118 00                    1575 	.uleb128	0
      000119 00                    1576 	.uleb128	0
      00011A 00                    1577 	.uleb128	0
      00011B 08                    1578 	.uleb128	8
      00011C 00 00 01 57           1579 	.dw	0,343
      000120 00 00r01r32           1580 	.dw	0,(Stimer4$delay$50)
      000124 00 00r01r4D           1581 	.dw	0,(Stimer4$delay$56)
      000128 09                    1582 	.uleb128	9
      000129 0A                    1583 	.uleb128	10
      00012A 00 00r00rE2           1584 	.dw	0,(Stimer4$delay$48)
      00012E 00 00r01r32           1585 	.dw	0,(Stimer4$delay$50)
      000132 04                    1586 	.uleb128	4
      000133 02                    1587 	.db	2
      000134 91                    1588 	.db	145
      000135 73                    1589 	.sleb128	-13
      000136 63 6E 74              1590 	.ascii "cnt"
      000139 00                    1591 	.db	0
      00013A 00 00 00 90           1592 	.dw	0,144
      00013E 04                    1593 	.uleb128	4
      00013F 01                    1594 	.db	1
      000140 53                    1595 	.db	83
      000141 75 69 66              1596 	.ascii "uif"
      000144 00                    1597 	.db	0
      000145 00 00 00 90           1598 	.dw	0,144
      000149 04                    1599 	.uleb128	4
      00014A 02                    1600 	.db	2
      00014B 91                    1601 	.db	145
      00014C 7C                    1602 	.sleb128	-4
      00014D 75 73                 1603 	.ascii "us"
      00014F 00                    1604 	.db	0
      000150 00 00 00 34           1605 	.dw	0,52
      000154 00                    1606 	.uleb128	0
      000155 00                    1607 	.uleb128	0
      000156 00                    1608 	.uleb128	0
      000157 04                    1609 	.uleb128	4
      000158 02                    1610 	.db	2
      000159 91                    1611 	.db	145
      00015A 00                    1612 	.sleb128	0
      00015B 5F 5F 32 30 30 30 30  1613 	.ascii "__200000501"
             30 35 30 31
      000166 00                    1614 	.db	0
      000167 00 00 00 34           1615 	.dw	0,52
      00016B 04                    1616 	.uleb128	4
      00016C 02                    1617 	.db	2
      00016D 91                    1618 	.db	145
      00016E 00                    1619 	.sleb128	0
      00016F 5F 5F 32 30 30 30 30  1620 	.ascii "__200000499"
             30 34 39 39
      00017A 00                    1621 	.db	0
      00017B 00 00 00 34           1622 	.dw	0,52
      00017F 04                    1623 	.uleb128	4
      000180 02                    1624 	.db	2
      000181 91                    1625 	.db	145
      000182 6F                    1626 	.sleb128	-17
      000183 73 74 61 72 74        1627 	.ascii "start"
      000188 00                    1628 	.db	0
      000189 00 00 00 34           1629 	.dw	0,52
      00018D 00                    1630 	.uleb128	0
      00018E 06                    1631 	.uleb128	6
      00018F 00 00 02 6F           1632 	.dw	0,623
      000193 64 65 6C 61 79 4D 69  1633 	.ascii "delayMicroseconds"
             63 72 6F 73 65 63 6F
             6E 64 73
      0001A4 00                    1634 	.db	0
      0001A5 00 00r01r55           1635 	.dw	0,(_delayMicroseconds)
      0001A9 01                    1636 	.db	1
      0001AA 07                    1637 	.uleb128	7
      0001AB 02                    1638 	.db	2
      0001AC 91                    1639 	.db	145
      0001AD 02                    1640 	.sleb128	2
      0001AE 75 73                 1641 	.ascii "us"
      0001B0 00                    1642 	.db	0
      0001B1 00 00 00 34           1643 	.dw	0,52
      0001B5 08                    1644 	.uleb128	8
      0001B6 00 00 01 FC           1645 	.dw	0,508
      0001BA 00 00r01r9B           1646 	.dw	0,(Stimer4$delayMicroseconds$66)
      0001BE 00 00r01r9F           1647 	.dw	0,(Stimer4$delayMicroseconds$67)
      0001C2 09                    1648 	.uleb128	9
      0001C3 0A                    1649 	.uleb128	10
      0001C4 00 00r01r57           1650 	.dw	0,(Stimer4$delayMicroseconds$64)
      0001C8 00 00r01r9B           1651 	.dw	0,(Stimer4$delayMicroseconds$66)
      0001CC 04                    1652 	.uleb128	4
      0001CD 02                    1653 	.db	2
      0001CE 91                    1654 	.db	145
      0001CF 76                    1655 	.sleb128	-10
      0001D0 63 6E 74              1656 	.ascii "cnt"
      0001D3 00                    1657 	.db	0
      0001D4 00 00 00 90           1658 	.dw	0,144
      0001D8 04                    1659 	.uleb128	4
      0001D9 02                    1660 	.db	2
      0001DA 91                    1661 	.db	145
      0001DB 77                    1662 	.sleb128	-9
      0001DC 75 69 66              1663 	.ascii "uif"
      0001DF 00                    1664 	.db	0
      0001E0 00 00 00 90           1665 	.dw	0,144
      0001E4 04                    1666 	.uleb128	4
      0001E5 0C                    1667 	.db	12
      0001E6 52                    1668 	.db	82
      0001E7 93                    1669 	.db	147
      0001E8 01                    1670 	.uleb128	1
      0001E9 51                    1671 	.db	81
      0001EA 93                    1672 	.db	147
      0001EB 01                    1673 	.uleb128	1
      0001EC 54                    1674 	.db	84
      0001ED 93                    1675 	.db	147
      0001EE 01                    1676 	.uleb128	1
      0001EF 53                    1677 	.db	83
      0001F0 93                    1678 	.db	147
      0001F1 01                    1679 	.uleb128	1
      0001F2 75 73                 1680 	.ascii "us"
      0001F4 00                    1681 	.db	0
      0001F5 00 00 00 34           1682 	.dw	0,52
      0001F9 00                    1683 	.uleb128	0
      0001FA 00                    1684 	.uleb128	0
      0001FB 00                    1685 	.uleb128	0
      0001FC 08                    1686 	.uleb128	8
      0001FD 00 00 02 38           1687 	.dw	0,568
      000201 00 00r01rEF           1688 	.dw	0,(Stimer4$delayMicroseconds$71)
      000205 00 00r02r0A           1689 	.dw	0,(Stimer4$delayMicroseconds$77)
      000209 09                    1690 	.uleb128	9
      00020A 0A                    1691 	.uleb128	10
      00020B 00 00r01r9F           1692 	.dw	0,(Stimer4$delayMicroseconds$69)
      00020F 00 00r01rEF           1693 	.dw	0,(Stimer4$delayMicroseconds$71)
      000213 04                    1694 	.uleb128	4
      000214 02                    1695 	.db	2
      000215 91                    1696 	.db	145
      000216 73                    1697 	.sleb128	-13
      000217 63 6E 74              1698 	.ascii "cnt"
      00021A 00                    1699 	.db	0
      00021B 00 00 00 90           1700 	.dw	0,144
      00021F 04                    1701 	.uleb128	4
      000220 01                    1702 	.db	1
      000221 53                    1703 	.db	83
      000222 75 69 66              1704 	.ascii "uif"
      000225 00                    1705 	.db	0
      000226 00 00 00 90           1706 	.dw	0,144
      00022A 04                    1707 	.uleb128	4
      00022B 02                    1708 	.db	2
      00022C 91                    1709 	.db	145
      00022D 7C                    1710 	.sleb128	-4
      00022E 75 73                 1711 	.ascii "us"
      000230 00                    1712 	.db	0
      000231 00 00 00 34           1713 	.dw	0,52
      000235 00                    1714 	.uleb128	0
      000236 00                    1715 	.uleb128	0
      000237 00                    1716 	.uleb128	0
      000238 04                    1717 	.uleb128	4
      000239 02                    1718 	.db	2
      00023A 91                    1719 	.db	145
      00023B 00                    1720 	.sleb128	0
      00023C 5F 5F 32 30 30 30 30  1721 	.ascii "__200000505"
             30 35 30 35
      000247 00                    1722 	.db	0
      000248 00 00 00 34           1723 	.dw	0,52
      00024C 04                    1724 	.uleb128	4
      00024D 02                    1725 	.db	2
      00024E 91                    1726 	.db	145
      00024F 00                    1727 	.sleb128	0
      000250 5F 5F 32 30 30 30 30  1728 	.ascii "__200000503"
             30 35 30 33
      00025B 00                    1729 	.db	0
      00025C 00 00 00 34           1730 	.dw	0,52
      000260 04                    1731 	.uleb128	4
      000261 02                    1732 	.db	2
      000262 91                    1733 	.db	145
      000263 6F                    1734 	.sleb128	-17
      000264 73 74 61 72 74        1735 	.ascii "start"
      000269 00                    1736 	.db	0
      00026A 00 00 00 34           1737 	.dw	0,52
      00026E 00                    1738 	.uleb128	0
      00026F 0B                    1739 	.uleb128	11
      000270 54 49 4D 34 5F 55 50  1740 	.ascii "TIM4_UPD_ISR"
             44 5F 49 53 52
      00027C 00                    1741 	.db	0
      00027D 00 00r02r12           1742 	.dw	0,(_TIM4_UPD_ISR)
      000281 00 00r02r43           1743 	.dw	0,(XG$TIM4_UPD_ISR$0$0+1)
      000285 03                    1744 	.db	3
      000286 01                    1745 	.db	1
      000287 00 00r00r00           1746 	.dw	0,(Ldebug_loc_start)
      00028B 0C                    1747 	.uleb128	12
      00028C 00 00 00 34           1748 	.dw	0,52
      000290 0D                    1749 	.uleb128	13
      000291 05                    1750 	.db	5
      000292 03                    1751 	.db	3
      000293 00 00r00r00           1752 	.dw	0,(_g_millis)
      000297 67 5F 6D 69 6C 6C 69  1753 	.ascii "g_millis"
             73
      00029F 00                    1754 	.db	0
      0002A0 01                    1755 	.db	1
      0002A1 01                    1756 	.db	1
      0002A2 00 00 02 8B           1757 	.dw	0,651
      0002A6 0D                    1758 	.uleb128	13
      0002A7 05                    1759 	.db	5
      0002A8 03                    1760 	.db	3
      0002A9 00 00r00r00           1761 	.dw	0,(_g_micros)
      0002AD 67 5F 6D 69 63 72 6F  1762 	.ascii "g_micros"
             73
      0002B5 00                    1763 	.db	0
      0002B6 01                    1764 	.db	1
      0002B7 01                    1765 	.db	1
      0002B8 00 00 02 8B           1766 	.dw	0,651
      0002BC 00                    1767 	.uleb128	0
      0002BD                       1768 Ldebug_info_end:
                                   1769 
                                   1770 	.area .debug_pubnames (NOLOAD)
      000000 00 00 00 67           1771 	.dw	0,Ldebug_pubnames_end-Ldebug_pubnames_start
      000004                       1772 Ldebug_pubnames_start:
      000004 00 02                 1773 	.dw	2
      000006 00 00r00r00           1774 	.dw	0,(Ldebug_info_start-4)
      00000A 00 00 02 BD           1775 	.dw	0,4+Ldebug_info_end-Ldebug_info_start
      00000E 00 00 00 A1           1776 	.dw	0,161
      000012 54 49 4D 34 5F 69 6E  1777 	.ascii "TIM4_init"
             69 74
      00001B 00                    1778 	.db	0
      00001C 00 00 00 B9           1779 	.dw	0,185
      000020 64 65 6C 61 79        1780 	.ascii "delay"
      000025 00                    1781 	.db	0
      000026 00 00 01 8E           1782 	.dw	0,398
      00002A 64 65 6C 61 79 4D 69  1783 	.ascii "delayMicroseconds"
             63 72 6F 73 65 63 6F
             6E 64 73
      00003B 00                    1784 	.db	0
      00003C 00 00 02 6F           1785 	.dw	0,623
      000040 54 49 4D 34 5F 55 50  1786 	.ascii "TIM4_UPD_ISR"
             44 5F 49 53 52
      00004C 00                    1787 	.db	0
      00004D 00 00 02 90           1788 	.dw	0,656
      000051 67 5F 6D 69 6C 6C 69  1789 	.ascii "g_millis"
             73
      000059 00                    1790 	.db	0
      00005A 00 00 02 A6           1791 	.dw	0,678
      00005E 67 5F 6D 69 63 72 6F  1792 	.ascii "g_micros"
             73
      000066 00                    1793 	.db	0
      000067 00 00 00 00           1794 	.dw	0,0
      00006B                       1795 Ldebug_pubnames_end:
                                   1796 
                                   1797 	.area .debug_frame (NOLOAD)
      000000 00 00                 1798 	.dw	0
      000002 00 10                 1799 	.dw	Ldebug_CIE0_end-Ldebug_CIE0_start
      000004                       1800 Ldebug_CIE0_start:
      000004 FF FF                 1801 	.dw	0xffff
      000006 FF FF                 1802 	.dw	0xffff
      000008 01                    1803 	.db	1
      000009 00                    1804 	.db	0
      00000A 01                    1805 	.uleb128	1
      00000B 7F                    1806 	.sleb128	-1
      00000C 09                    1807 	.db	9
      00000D 0C                    1808 	.db	12
      00000E 08                    1809 	.uleb128	8
      00000F 09                    1810 	.uleb128	9
      000010 89                    1811 	.db	137
      000011 01                    1812 	.uleb128	1
      000012 00                    1813 	.db	0
      000013 00                    1814 	.db	0
      000014                       1815 Ldebug_CIE0_end:
      000014 00 00 00 14           1816 	.dw	0,20
      000018 00 00r00r00           1817 	.dw	0,(Ldebug_CIE0_start-4)
      00001C 00 00r02r12           1818 	.dw	0,(Stimer4$TIM4_UPD_ISR$83)	;initial loc
      000020 00 00 00 31           1819 	.dw	0,Stimer4$TIM4_UPD_ISR$91-Stimer4$TIM4_UPD_ISR$83
      000024 01                    1820 	.db	1
      000025 00 00r02r12           1821 	.dw	0,(Stimer4$TIM4_UPD_ISR$83)
      000029 0E                    1822 	.db	14
      00002A 09                    1823 	.uleb128	9
      00002B 00                    1824 	.db	0
                                   1825 
                                   1826 	.area .debug_frame (NOLOAD)
      00002C 00 00                 1827 	.dw	0
      00002E 00 10                 1828 	.dw	Ldebug_CIE1_end-Ldebug_CIE1_start
      000030                       1829 Ldebug_CIE1_start:
      000030 FF FF                 1830 	.dw	0xffff
      000032 FF FF                 1831 	.dw	0xffff
      000034 01                    1832 	.db	1
      000035 00                    1833 	.db	0
      000036 01                    1834 	.uleb128	1
      000037 7F                    1835 	.sleb128	-1
      000038 09                    1836 	.db	9
      000039 0C                    1837 	.db	12
      00003A 08                    1838 	.uleb128	8
      00003B 02                    1839 	.uleb128	2
      00003C 89                    1840 	.db	137
      00003D 01                    1841 	.uleb128	1
      00003E 00                    1842 	.db	0
      00003F 00                    1843 	.db	0
      000040                       1844 Ldebug_CIE1_end:
      000040 00 00 00 50           1845 	.dw	0,80
      000044 00 00r00r2C           1846 	.dw	0,(Ldebug_CIE1_start-4)
      000048 00 00r01r55           1847 	.dw	0,(Stimer4$delayMicroseconds$62)	;initial loc
      00004C 00 00 00 BD           1848 	.dw	0,Stimer4$delayMicroseconds$81-Stimer4$delayMicroseconds$62
      000050 01                    1849 	.db	1
      000051 00 00r01r55           1850 	.dw	0,(Stimer4$delayMicroseconds$62)
      000055 0E                    1851 	.db	14
      000056 02                    1852 	.uleb128	2
      000057 01                    1853 	.db	1
      000058 00 00r01r57           1854 	.dw	0,(Stimer4$delayMicroseconds$63)
      00005C 0E                    1855 	.db	14
      00005D 13                    1856 	.uleb128	19
      00005E 01                    1857 	.db	1
      00005F 00 00r01r90           1858 	.dw	0,(Stimer4$delayMicroseconds$65)
      000063 0E                    1859 	.db	14
      000064 13                    1860 	.uleb128	19
      000065 01                    1861 	.db	1
      000066 00 00r01rDC           1862 	.dw	0,(Stimer4$delayMicroseconds$70)
      00006A 0E                    1863 	.db	14
      00006B 13                    1864 	.uleb128	19
      00006C 01                    1865 	.db	1
      00006D 00 00r01rF9           1866 	.dw	0,(Stimer4$delayMicroseconds$73)
      000071 0E                    1867 	.db	14
      000072 14                    1868 	.uleb128	20
      000073 01                    1869 	.db	1
      000074 00 00r01rFF           1870 	.dw	0,(Stimer4$delayMicroseconds$74)
      000078 0E                    1871 	.db	14
      000079 13                    1872 	.uleb128	19
      00007A 01                    1873 	.db	1
      00007B 00 00r01rFF           1874 	.dw	0,(Stimer4$delayMicroseconds$75)
      00007F 0E                    1875 	.db	14
      000080 14                    1876 	.uleb128	20
      000081 01                    1877 	.db	1
      000082 00 00r02r02           1878 	.dw	0,(Stimer4$delayMicroseconds$76)
      000086 0E                    1879 	.db	14
      000087 13                    1880 	.uleb128	19
      000088 01                    1881 	.db	1
      000089 00 00r02r11           1882 	.dw	0,(Stimer4$delayMicroseconds$80)
      00008D 0E                    1883 	.db	14
      00008E FC FF FF FF 0F        1884 	.uleb128	-4
      000093 00                    1885 	.db	0
                                   1886 
                                   1887 	.area .debug_frame (NOLOAD)
      000094 00 00                 1888 	.dw	0
      000096 00 10                 1889 	.dw	Ldebug_CIE2_end-Ldebug_CIE2_start
      000098                       1890 Ldebug_CIE2_start:
      000098 FF FF                 1891 	.dw	0xffff
      00009A FF FF                 1892 	.dw	0xffff
      00009C 01                    1893 	.db	1
      00009D 00                    1894 	.db	0
      00009E 01                    1895 	.uleb128	1
      00009F 7F                    1896 	.sleb128	-1
      0000A0 09                    1897 	.db	9
      0000A1 0C                    1898 	.db	12
      0000A2 08                    1899 	.uleb128	8
      0000A3 02                    1900 	.uleb128	2
      0000A4 89                    1901 	.db	137
      0000A5 01                    1902 	.uleb128	1
      0000A6 00                    1903 	.db	0
      0000A7 00                    1904 	.db	0
      0000A8                       1905 Ldebug_CIE2_end:
      0000A8 00 00 00 7C           1906 	.dw	0,124
      0000AC 00 00r00r94           1907 	.dw	0,(Ldebug_CIE2_start-4)
      0000B0 00 00r00r83           1908 	.dw	0,(Stimer4$delay$34)	;initial loc
      0000B4 00 00 00 D2           1909 	.dw	0,Stimer4$delay$60-Stimer4$delay$34
      0000B8 01                    1910 	.db	1
      0000B9 00 00r00r83           1911 	.dw	0,(Stimer4$delay$34)
      0000BD 0E                    1912 	.db	14
      0000BE 02                    1913 	.uleb128	2
      0000BF 01                    1914 	.db	1
      0000C0 00 00r00r85           1915 	.dw	0,(Stimer4$delay$35)
      0000C4 0E                    1916 	.db	14
      0000C5 13                    1917 	.uleb128	19
      0000C6 01                    1918 	.db	1
      0000C7 00 00r00rBE           1919 	.dw	0,(Stimer4$delay$37)
      0000CB 0E                    1920 	.db	14
      0000CC 13                    1921 	.uleb128	19
      0000CD 01                    1922 	.db	1
      0000CE 00 00r00rD0           1923 	.dw	0,(Stimer4$delay$41)
      0000D2 0E                    1924 	.db	14
      0000D3 15                    1925 	.uleb128	21
      0000D4 01                    1926 	.db	1
      0000D5 00 00r00rD3           1927 	.dw	0,(Stimer4$delay$42)
      0000D9 0E                    1928 	.db	14
      0000DA 17                    1929 	.uleb128	23
      0000DB 01                    1930 	.db	1
      0000DC 00 00r00rD5           1931 	.dw	0,(Stimer4$delay$43)
      0000E0 0E                    1932 	.db	14
      0000E1 18                    1933 	.uleb128	24
      0000E2 01                    1934 	.db	1
      0000E3 00 00r00rD7           1935 	.dw	0,(Stimer4$delay$44)
      0000E7 0E                    1936 	.db	14
      0000E8 19                    1937 	.uleb128	25
      0000E9 01                    1938 	.db	1
      0000EA 00 00r00rD9           1939 	.dw	0,(Stimer4$delay$45)
      0000EE 0E                    1940 	.db	14
      0000EF 1B                    1941 	.uleb128	27
      0000F0 01                    1942 	.db	1
      0000F1 00 00r00rDE           1943 	.dw	0,(Stimer4$delay$46)
      0000F5 0E                    1944 	.db	14
      0000F6 13                    1945 	.uleb128	19
      0000F7 01                    1946 	.db	1
      0000F8 00 00r01r1F           1947 	.dw	0,(Stimer4$delay$49)
      0000FC 0E                    1948 	.db	14
      0000FD 13                    1949 	.uleb128	19
      0000FE 01                    1950 	.db	1
      0000FF 00 00r01r3C           1951 	.dw	0,(Stimer4$delay$52)
      000103 0E                    1952 	.db	14
      000104 14                    1953 	.uleb128	20
      000105 01                    1954 	.db	1
      000106 00 00r01r42           1955 	.dw	0,(Stimer4$delay$53)
      00010A 0E                    1956 	.db	14
      00010B 13                    1957 	.uleb128	19
      00010C 01                    1958 	.db	1
      00010D 00 00r01r42           1959 	.dw	0,(Stimer4$delay$54)
      000111 0E                    1960 	.db	14
      000112 14                    1961 	.uleb128	20
      000113 01                    1962 	.db	1
      000114 00 00r01r45           1963 	.dw	0,(Stimer4$delay$55)
      000118 0E                    1964 	.db	14
      000119 13                    1965 	.uleb128	19
      00011A 01                    1966 	.db	1
      00011B 00 00r01r54           1967 	.dw	0,(Stimer4$delay$59)
      00011F 0E                    1968 	.db	14
      000120 FC FF FF FF 0F        1969 	.uleb128	-4
      000125 00                    1970 	.db	0
      000126 00                    1971 	.db	0
      000127 00                    1972 	.db	0
                                   1973 
                                   1974 	.area .debug_frame (NOLOAD)
      000128 00 00                 1975 	.dw	0
      00012A 00 10                 1976 	.dw	Ldebug_CIE3_end-Ldebug_CIE3_start
      00012C                       1977 Ldebug_CIE3_start:
      00012C FF FF                 1978 	.dw	0xffff
      00012E FF FF                 1979 	.dw	0xffff
      000130 01                    1980 	.db	1
      000131 00                    1981 	.db	0
      000132 01                    1982 	.uleb128	1
      000133 7F                    1983 	.sleb128	-1
      000134 09                    1984 	.db	9
      000135 0C                    1985 	.db	12
      000136 08                    1986 	.uleb128	8
      000137 02                    1987 	.uleb128	2
      000138 89                    1988 	.db	137
      000139 01                    1989 	.uleb128	1
      00013A 00                    1990 	.db	0
      00013B 00                    1991 	.db	0
      00013C                       1992 Ldebug_CIE3_end:
      00013C 00 00 00 14           1993 	.dw	0,20
      000140 00 00r01r28           1994 	.dw	0,(Ldebug_CIE3_start-4)
      000144 00 00r00r4A           1995 	.dw	0,(Stimer4$TIM4_init$18)	;initial loc
      000148 00 00 00 39           1996 	.dw	0,Stimer4$TIM4_init$32-Stimer4$TIM4_init$18
      00014C 01                    1997 	.db	1
      00014D 00 00r00r4A           1998 	.dw	0,(Stimer4$TIM4_init$18)
      000151 0E                    1999 	.db	14
      000152 02                    2000 	.uleb128	2
      000153 00                    2001 	.db	0
                                   2002 
                                   2003 	.area .debug_frame (NOLOAD)
      000154 00 00                 2004 	.dw	0
      000156 00 10                 2005 	.dw	Ldebug_CIE4_end-Ldebug_CIE4_start
      000158                       2006 Ldebug_CIE4_start:
      000158 FF FF                 2007 	.dw	0xffff
      00015A FF FF                 2008 	.dw	0xffff
      00015C 01                    2009 	.db	1
      00015D 00                    2010 	.db	0
      00015E 01                    2011 	.uleb128	1
      00015F 7F                    2012 	.sleb128	-1
      000160 09                    2013 	.db	9
      000161 0C                    2014 	.db	12
      000162 08                    2015 	.uleb128	8
      000163 02                    2016 	.uleb128	2
      000164 89                    2017 	.db	137
      000165 01                    2018 	.uleb128	1
      000166 00                    2019 	.db	0
      000167 00                    2020 	.db	0
      000168                       2021 Ldebug_CIE4_end:
      000168 00 00 00 28           2022 	.dw	0,40
      00016C 00 00r01r54           2023 	.dw	0,(Ldebug_CIE4_start-4)
      000170 00 00r00r00           2024 	.dw	0,(Stimer4$micros$1)	;initial loc
      000174 00 00 00 4A           2025 	.dw	0,Stimer4$micros$16-Stimer4$micros$1
      000178 01                    2026 	.db	1
      000179 00 00r00r00           2027 	.dw	0,(Stimer4$micros$1)
      00017D 0E                    2028 	.db	14
      00017E 02                    2029 	.uleb128	2
      00017F 01                    2030 	.db	1
      000180 00 00r00r02           2031 	.dw	0,(Stimer4$micros$2)
      000184 0E                    2032 	.db	14
      000185 0C                    2033 	.uleb128	12
      000186 01                    2034 	.db	1
      000187 00 00r00r3B           2035 	.dw	0,(Stimer4$micros$10)
      00018B 0E                    2036 	.db	14
      00018C 0C                    2037 	.uleb128	12
      00018D 01                    2038 	.db	1
      00018E 00 00r00r49           2039 	.dw	0,(Stimer4$micros$14)
      000192 0E                    2040 	.db	14
      000193 02                    2041 	.uleb128	2
